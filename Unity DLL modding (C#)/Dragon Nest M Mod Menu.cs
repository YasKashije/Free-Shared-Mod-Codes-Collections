using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using XMainClient;
using XUtliPoolLib;

public class DragonNestKR : MonoBehaviour
{
	 private static DragonNestKR instance, bl;
    /// fields
    public static GUIStyle BgStyle, OnStyle, OffStyle, LabelStyle, BtnStyle;
    public static GUIStyle BtnStyle1, BtnStyle2, BtnStyle3;
    public static bool toggle1, toggle2, toggle3; // Add new fields here
    public static float delay = 0, widthSize = 300; // Change whole width size of menu here

    // Size of image/logo (x, y, width, height)
    // Image size doesn't ned to be excat, you can just resize HERE
    // Example your real image size is 250x250 and size in Unity is 90x90: new Rect(10, 10, 90, 90);

    public static bool isOpen = false, ifDragged = false;
    public static Rect rect = new Rect(40f, 40f, 100f, 100f);

    // Texture
    public static Texture2D Image = null, ontexture, onpresstexture, offtexture, offpresstexture, backtexture, btntexture, btnpresstexture;
    public static Texture2D NewTexture2D { get { return new Texture2D(1, 1); } }

    // Damage multiplier 
    public static int dmgMulti = 1;

    // Remember Y position
    public static int btnY, mulY;

    // Must be static if you create this as new class in dnSpy.
    // Find active classes like UIRoot, UIdrawcall, Soundmanager or something similar
    // and add:
    // public void OnGUI()
    // {
    //   	MyClassNameOfModMenu.OnGUI();
    // }s
    // !!! IMPORTANT !!!
    // To use this code in unity editor, please change this to: public void OnGUI()
    // Before adding this code to the game using dnSpy, please add STATIC like this: public static void OnGUI()
    public static void OnGUI()
    {
        // This is the bytes of .png image.
        // There must be a if-statement to load image once to avoid memory leaking
        if (Image == null)
        {
            // No need Start(); if you are testing it on Unity Editor
            Start();
        }

        // GUI Dragable Window
        rect = GUI.Window(0, rect, new GUI.WindowFunction(Logo), "", new GUIStyle());

        // I created additional class (MyMenu) of GUI stuff to avoid high CPU usage
        // and lagging on low-end devices
        // Never make your whole GUI codes in OnGUI()
        if (isOpen)
        {
            // if ShowHide true, call MyMenu();
            ModMenuGUI();
        }
    }

    // !!! IMPORTANT !!!
    // To use this code in unity editor, please change this to: public void ModMenuGUI()
    // Before adding this code to the game using dnSpy, please add STATIC like this: public static void ModMenuGUI()
    public static void ModMenuGUI()
    {
        /// Credit
        // (x, y, width, height)
        GUI.Box(new Rect(rect.x + 50f, rect.y + 70f, widthSize + 10, 50f + 45 * mulY), "", BgStyle);
        GUI.Label(new Rect(rect.x + 55f, rect.y + 75f, widthSize + 10, 95f), "Modded by AndnixSH\nPlatinmods.com", LabelStyle);

        // A note/warning. Remove or comment out to remove it
        //GUI.Box(new Rect(rect.x, rect.y + 125f + 45 * mulY, widthSize + 100, 70f), "", BgStyle);
        //GUI.Label(new Rect(rect.x + 50f, rect.y + 130f + 45 * mulY, widthSize + 10, 50f), "<color=yellow>NOTE: ENABLE/DISABLE MODS\nBEFORE ENTERING BATTLE!</color>", LabelStyle);

        // Off/On Buttons
        // How to hack in game function:
        // public int getDamage
        // {
        //       if (MyClassNameOfModMenu.toggle1)
        //       {
        //              return 999999;
        //       }
        //       return this.get_dmg;
        // }

        /// Multiplier buttons. How to hack in game function:
        // public int getDamage
        // {
        //     return this.get_dmg * MyClassNameOfModMenu.dmgMulti;
        // }
        if (toggle1)
        {
            //(number) = Order of button | false/true = Make button smaller for multipler
            if (GUI.Button(BtnRect(1, false), "1 hit kill: ON", OnStyle))
            {
                toggle1 = false;
            }
        }
        else if (GUI.Button(BtnRect(1, false), "1 hit kill: OFF", OffStyle))
        {
            toggle1 = true;
        }

        /// Clicker Button
        // Open URL
        if (toggle2)
        {
            //(number) = Order of button | false/true = Make button smaller for multipler
            if (GUI.Button(BtnRect(2, false), "God mode: ON", OnStyle))
            {
                toggle2 = false;
            }
        }
        else if (GUI.Button(BtnRect(2, false), "God mode: OFF", OffStyle))
        {
            toggle2 = true;
        }
		
		if (toggle3)
        {
            //(number) = Order of button | false/true = Make button smaller for multipler
            if (GUI.Button(BtnRect(3, false), "No cooldown: ON", OnStyle))
            {
                toggle3 = false;
            }
        }
        else if (GUI.Button(BtnRect(3, false), "No cooldown: OFF", OffStyle))
        {
            toggle3 = true;
        }
		
		/// Clicker Button
        // Open URL
        if (GUI.Button(BtnRect(4, false), "Kill All Monsters", BtnStyle))
        {
            XSingleton<XLevelSpawnMgr>.singleton.KillAllMonster();
        }

		/// Clicker Button
        // Open URL
        if (GUI.Button(BtnRect(5, false), "Instant Win", BtnStyle))
        {
            XSingleton<XLevelFinishMgr>.singleton.ForceLevelFinish(true);
        }

        /// Clicker Button
        // Open URL
        if (GUI.Button(BtnRect(6, false), "Visit platinmods.com", BtnStyle))
        {
            Application.OpenURL("https://platinmods.com/");
        }
    }

    /// Rect for buttons
    // It automatically auto position buttons. There is no need to change it
    public static Rect BtnRect(int y, bool multiplyBtn)
    {
        mulY = y;
        if (multiplyBtn)
        {
            btnY = 75 + 45 * y;
            return new Rect(rect.x + 55, rect.y + 75 + 45 * y, widthSize - 90, 40);
        }
        return new Rect(rect.x + 55, rect.y + 75 + 45 * y, widthSize, 40);
    }

    /// Load GUIStyle
    public static void Start()
    {
        if (BgStyle == null)
        {
            BgStyle = new GUIStyle();
            BgStyle.normal.background = BackTexture;
            BgStyle.onNormal.background = BackTexture;
            BgStyle.active.background = BackTexture;
            BgStyle.onActive.background = BackTexture;
            BgStyle.normal.textColor = Color.white;
            BgStyle.onNormal.textColor = Color.white;
            BgStyle.active.textColor = Color.white;
            BgStyle.onActive.textColor = Color.white;
            BgStyle.fontSize = 18;
            // BgStyle.fontStyle = FontStyle.Normal;
            BgStyle.alignment = TextAnchor.UpperCenter;
        }

        if (LabelStyle == null)
        {
            LabelStyle = new GUIStyle();
            LabelStyle.normal.textColor = Color.white;
            LabelStyle.onNormal.textColor = Color.white;
            LabelStyle.active.textColor = Color.white;
            LabelStyle.onActive.textColor = Color.white;
            LabelStyle.fontSize = 18;
            // LabelStyle.fontStyle = FontStyle.Normal;
            LabelStyle.alignment = TextAnchor.UpperCenter;
        }

        if (OffStyle == null)
        {
            OffStyle = new GUIStyle();
            OffStyle.normal.background = OffTexture;
            OffStyle.onNormal.background = OffTexture;
            OffStyle.active.background = OffPressTexture;
            OffStyle.onActive.background = OffPressTexture;
            OffStyle.normal.textColor = Color.white;
            OffStyle.onNormal.textColor = Color.white;
            OffStyle.active.textColor = Color.white;
            OffStyle.onActive.textColor = Color.white;
            OffStyle.fontSize = 18;
            // OffStyle.fontStyle = FontStyle.Normal;
            OffStyle.alignment = TextAnchor.MiddleCenter;
        }

        if (OnStyle == null)
        {
            OnStyle = new GUIStyle();
            OnStyle.normal.background = OnTexture;
            OnStyle.onNormal.background = OnTexture;
            OnStyle.active.background = OnPressTexture;
            OnStyle.onActive.background = OnPressTexture;
            OnStyle.normal.textColor = Color.white;
            OnStyle.onNormal.textColor = Color.white;
            OnStyle.active.textColor = Color.white;
            OnStyle.onActive.textColor = Color.white;
            OnStyle.fontSize = 18;
            //  OnStyle.fontStyle = FontStyle.Normal;
            OnStyle.alignment = TextAnchor.MiddleCenter;
        }

        if (BtnStyle == null)
        {
            BtnStyle = new GUIStyle();
            BtnStyle.normal.background = BtnTexture;
            BtnStyle.onNormal.background = BtnTexture;
            BtnStyle.active.background = BtnPressTexture;
            BtnStyle.onActive.background = BtnPressTexture;
            BtnStyle.normal.textColor = Color.white;
            BtnStyle.onNormal.textColor = Color.white;
            BtnStyle.active.textColor = Color.white;
            BtnStyle.onActive.textColor = Color.white;
            BtnStyle.fontSize = 18;
            //  BtnStyle.fontStyle = FontStyle.Normal;
            BtnStyle.alignment = TextAnchor.MiddleCenter;
        }
    }

    /// Textures
    // Use material colors and convert hex code to rbg https://www.materialpalette.com/colors
    public static Texture2D BtnTexture
    {
        get
        {
            if (btntexture == null)
            {
                btntexture = NewTexture2D;
                btntexture.SetPixel(0, 0, new Color32(3, 155, 229, 255));
                btntexture.Apply();
            }
            return btntexture;
        }
    }

    public static Texture2D BtnPressTexture
    {
        get
        {
            if (btnpresstexture == null)
            {
                btnpresstexture = NewTexture2D;
                btnpresstexture.SetPixel(0, 0, new Color32(2, 119, 189, 255));
                btnpresstexture.Apply();
            }
            return btnpresstexture;
        }
    }

    public static Texture2D OnPressTexture
    {
        get
        {
            if (onpresstexture == null)
            {
                onpresstexture = NewTexture2D;
                onpresstexture.SetPixel(0, 0, new Color32(56, 142, 60, 255));
                onpresstexture.Apply();
            }
            return onpresstexture;
        }
    }

    public static Texture2D OnTexture
    {
        get
        {
            if (ontexture == null)
            {
                ontexture = NewTexture2D;
                ontexture.SetPixel(0, 0, new Color32(76, 175, 80, 255));
                ontexture.Apply();
            }
            return ontexture;
        }
    }

    public static Texture2D OffPressTexture
    {
        get
        {
            if (offpresstexture == null)
            {
                offpresstexture = NewTexture2D;
                offpresstexture.SetPixel(0, 0, new Color32(211, 47, 47, 255));
                offpresstexture.Apply();
            }
            return offpresstexture;
        }
    }

    public static Texture2D OffTexture
    {
        get
        {
            if (offtexture == null)
            {
                offtexture = NewTexture2D;
                offtexture.SetPixel(0, 0, new Color32(244, 67, 54, 255));
                offtexture.Apply();
            }
            return offtexture;
        }
    }

    public static Texture2D BackTexture
    {
        get
        {
            if (backtexture == null)
            {
                backtexture = NewTexture2D;
                //ToHtmlStringRGBA  new Color(33, 150, 243, 1)
                backtexture.SetPixel(0, 0, new Color32(42, 42, 42, 200));
                backtexture.Apply();
            }
            return backtexture;
        }
    }

    // !!! IMPORTANT !!!
    // To use this code in unity editor, please change this to: public static void Logo(int windowID)
    // Before adding this code to the game using dnSpy, please add STATIC like this: public static void Logo(int windowID)
    public static void Logo(int windowID)
    {
        //This is the bytes of .png image.
        //There must be a if-statement to load image once to avoid memory leaking
        if (Image == null)
        {
            //To add your own image, open image file in HxD, select all, Edit -> Copy as -> C#
            //and paste it here
            //I think you can do it better but bytes are the good way to prevent image being stolen
            //easly because decompilers fail to display bytes than 10000
            //Use https://compresspng.com/ to make file size smaller
            byte[] rawData = {
    0x89, 0x50, 0x4E, 0x47, 0x0D, 0x0A, 0x1A, 0x0A, 0x00, 0x00, 0x00, 0x0D,
    0x49, 0x48, 0x44, 0x52, 0x00, 0x00, 0x00, 0xC8, 0x00, 0x00, 0x00, 0xC8,
    0x08, 0x03, 0x00, 0x00, 0x00, 0x9A, 0x86, 0x5E, 0xAC, 0x00, 0x00, 0x00,
    0x04, 0x67, 0x41, 0x4D, 0x41, 0x00, 0x00, 0xB1, 0x8F, 0x0B, 0xFC, 0x61,
    0x05, 0x00, 0x00, 0x00, 0x01, 0x73, 0x52, 0x47, 0x42, 0x00, 0xAE, 0xCE,
    0x1C, 0xE9, 0x00, 0x00, 0x02, 0x37, 0x50, 0x4C, 0x54, 0x45, 0x47, 0x70,
    0x4C, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0xFD, 0x4D,
    0x00, 0xFF, 0x4E, 0x00, 0xFF, 0x4E, 0x00, 0x12, 0x12, 0x12, 0x1A, 0x1A,
    0x1A, 0xFF, 0x4D, 0x00, 0xFF, 0x8E, 0x55, 0xFF, 0xA4, 0x60, 0xFF, 0xA0,
    0x5E, 0xFF, 0x88, 0x58, 0xFF, 0x9C, 0x5C, 0xFF, 0x82, 0x55, 0x17, 0x17,
    0x17, 0xFF, 0x96, 0x58, 0xFF, 0xAC, 0x63, 0xFF, 0xA8, 0x61, 0xFF, 0x75,
    0x4D, 0xFF, 0x7C, 0x52, 0xFF, 0x60, 0x49, 0x0F, 0x0E, 0x0E, 0xFF, 0x91,
    0x5B, 0xFF, 0x52, 0x46, 0x19, 0x07, 0x0B, 0xFF, 0x7C, 0x4D, 0xFF, 0x5A,
    0x49, 0xFF, 0x70, 0x4D, 0x2D, 0x08, 0x10, 0xFF, 0x66, 0x4D, 0xFF, 0xC1,
    0x6C, 0xE7, 0x5F, 0x40, 0xFF, 0xB0, 0x65, 0xFF, 0xC7, 0x6F, 0xE4, 0x57,
    0x3E, 0xFF, 0x82, 0x4E, 0xFF, 0x88, 0x51, 0xFF, 0x4C, 0x43, 0xA3, 0x1B,
    0x28, 0xE8, 0x67, 0x42, 0xFF, 0x6B, 0x4D, 0xE2, 0x4E, 0x3C, 0xE0, 0x61,
    0x3F, 0x26, 0x06, 0x0E, 0xFE, 0x45, 0x41, 0xFF, 0xBB, 0x6A, 0xE4, 0x40,
    0x3A, 0xD8, 0x33, 0x34, 0xF8, 0x40, 0x3E, 0x56, 0x06, 0x15, 0x2F, 0x1D,
    0x16, 0xDD, 0x39, 0x37, 0xFF, 0xB5, 0x67, 0xFF, 0x97, 0x5E, 0xD1, 0x53,
    0x39, 0xED, 0x61, 0x42, 0xD3, 0x40, 0x36, 0xEF, 0x6B, 0x44, 0xD8, 0x5B,
    0x3C, 0xFF, 0x76, 0x53, 0xDC, 0x42, 0x38, 0xCD, 0x37, 0x33, 0x49, 0x05,
    0x14, 0xDC, 0x4B, 0x3A, 0x19, 0x12, 0x13, 0xF2, 0x65, 0x44, 0xFE, 0x6D,
    0x48, 0xC7, 0x31, 0x30, 0xF2, 0x3D, 0x3C, 0xC9, 0x4D, 0x36, 0x29, 0x1B,
    0x16, 0x22, 0x13, 0x12, 0x60, 0x0B, 0x18, 0x84, 0x14, 0x23, 0xDB, 0x43,
    0x00, 0xD2, 0x2C, 0x32, 0xF7, 0x52, 0x43, 0x97, 0x0E, 0x24, 0xF9, 0x4A,
    0x00, 0xF5, 0x6B, 0x46, 0xF9, 0x7A, 0x4A, 0xF1, 0x34, 0x3B, 0x49, 0x22,
    0x11, 0xF2, 0x73, 0x46, 0x3A, 0x05, 0x10, 0x68, 0x07, 0x18, 0xF7, 0x75,
    0x48, 0xFF, 0x3E, 0x43, 0xFF, 0xD5, 0x74, 0x1C, 0x1A, 0x1A, 0xF9, 0x67,
    0x47, 0xA1, 0x35, 0x03, 0x6F, 0x2A, 0x0B, 0xE9, 0x4D, 0x3E, 0xB6, 0x3B,
    0x00, 0xC1, 0x3D, 0x00, 0x3A, 0x20, 0x15, 0x61, 0x26, 0x0D, 0xFE, 0x33,
    0x40, 0xE9, 0x45, 0x00, 0x79, 0x08, 0x1C, 0x95, 0x32, 0x05, 0xEE, 0x56,
    0x41, 0x83, 0x2F, 0x08, 0x55, 0x25, 0x11, 0xC5, 0x28, 0x30, 0xC1, 0x18,
    0x2E, 0xAB, 0x37, 0x01, 0xF2, 0x48, 0x00, 0x77, 0x2D, 0x0C, 0xCD, 0x3F,
    0x00, 0xE6, 0x2A, 0x38, 0xB0, 0x16, 0x2B, 0xFF, 0xE4, 0x79, 0x3A, 0x1B,
    0x0E, 0xAC, 0x37, 0x09, 0xE7, 0x41, 0x29, 0xDB, 0x1F, 0x34, 0xB1, 0x2E,
    0x30, 0x43, 0x75, 0xAC, 0x76, 0x00, 0x00, 0x00, 0x4B, 0x74, 0x52, 0x4E,
    0x53, 0x00, 0x1A, 0x0E, 0x10, 0x0B, 0x02, 0x09, 0x01, 0x04, 0x06, 0x22,
    0x1D, 0x6F, 0x58, 0x2B, 0x76, 0x61, 0x36, 0x53, 0x3E, 0x7C, 0x66, 0x30,
    0xC4, 0x12, 0x2E, 0x28, 0x25, 0x88, 0xBF, 0x17, 0x48, 0x4F, 0xF8, 0xDD,
    0x4C, 0x9B, 0x96, 0xCA, 0x14, 0x39, 0x6B, 0x33, 0x91, 0x9F, 0xE5, 0x81,
    0xE2, 0x43, 0xEB, 0x3C, 0x85, 0x8C, 0x45, 0xA3, 0xB1, 0xB6, 0xAE, 0xF4,
    0xD2, 0xD6, 0xAB, 0x5E, 0x5A, 0xEF, 0xBB, 0x1F, 0x40, 0xA6, 0xCD, 0x72,
    0xD9, 0xE6, 0xA7, 0xFC, 0x24, 0x64, 0x7E, 0xB6, 0x00, 0x00, 0x1D, 0x23,
    0x49, 0x44, 0x41, 0x54, 0x78, 0xDA, 0xD4, 0x97, 0xEB, 0x6F, 0x9A, 0xE7,
    0x19, 0xC6, 0x8D, 0xE3, 0x06, 0xD7, 0xC6, 0x80, 0x39, 0x1A, 0x0C, 0x86,
    0x97, 0x53, 0x38, 0x1F, 0xCD, 0x19, 0x30, 0x18, 0x03, 0xB2, 0xFB, 0xBE,
    0x69, 0x12, 0x65, 0xC9, 0xD6, 0x4A, 0x6B, 0x92, 0x6A, 0xAA, 0x9C, 0x75,
    0xCD, 0xA6, 0xE5, 0x03, 0xDA, 0xA6, 0xAA, 0x6A, 0xD2, 0x48, 0xD3, 0xC8,
    0x8A, 0x22, 0x14, 0xB1, 0x6C, 0x12, 0xB2, 0x47, 0xB0, 0x3C, 0xC7, 0xD6,
    0x8C, 0xB3, 0xED, 0xCB, 0xFE, 0xB8, 0xDE, 0xF7, 0xF3, 0xBC, 0xE0, 0x43,
    0x9C, 0x83, 0x4F, 0xF8, 0xF5, 0xF5, 0xA1, 0x75, 0x55, 0xC9, 0xE6, 0xA7,
    0xEB, 0x70, 0x3F, 0x0C, 0x0D, 0x9D, 0x4C, 0xE2, 0x8F, 0x40, 0xA3, 0xA3,
    0x1F, 0x5F, 0xBE, 0x3C, 0x32, 0x3C, 0x7C, 0x69, 0xEA, 0xCA, 0x8C, 0x48,
    0x34, 0x3E, 0x3F, 0x36, 0x36, 0xAD, 0xD7, 0x4B, 0xA5, 0x3A, 0x9D, 0x46,
    0xE3, 0xEE, 0x4B, 0xA3, 0xD1, 0xE9, 0xA4, 0x52, 0xBD, 0x7E, 0x7A, 0x6C,
    0x6C, 0x7E, 0x5C, 0x24, 0x9A, 0xB9, 0x32, 0x75, 0x69, 0x78, 0x78, 0xE4,
    0xF2, 0xE5, 0x8F, 0x47, 0x47, 0xF1, 0x77, 0x88, 0x87, 0xCE, 0x51, 0x62,
    0x31, 0x81, 0x20, 0x14, 0x04, 0x02, 0x18, 0xA6, 0xF5, 0x52, 0x1D, 0x7C,
    0xFC, 0x49, 0x67, 0x38, 0xAC, 0x2C, 0x16, 0x83, 0xA0, 0x28, 0x08, 0xFF,
    0x5D, 0x2C, 0x2A, 0xC3, 0x61, 0xE7, 0x24, 0x20, 0xE9, 0xA4, 0x80, 0x03,
    0x34, 0x04, 0x06, 0x59, 0x08, 0x8C, 0xF8, 0xBC, 0x58, 0xD0, 0x8C, 0x1E,
    0x05, 0x0F, 0x81, 0x0C, 0x80, 0x50, 0x0C, 0x46, 0x4D, 0x56, 0xAB, 0xD9,
    0xAC, 0x50, 0x4C, 0xEC, 0x91, 0x42, 0x61, 0x36, 0x5B, 0xAD, 0xA6, 0x68,
    0xB0, 0x88, 0x38, 0x40, 0xC3, 0xC3, 0xF4, 0x58, 0xCE, 0xC7, 0x16, 0xF1,
    0x6E, 0xA2, 0x08, 0x05, 0x38, 0xA1, 0xD3, 0x20, 0x03, 0x20, 0x98, 0x15,
    0x13, 0x73, 0x39, 0xB9, 0x5C, 0xAD, 0x76, 0xB9, 0x5C, 0x92, 0xBE, 0xE0,
    0x3F, 0xD4, 0x6A, 0xB9, 0x3C, 0x37, 0x37, 0xA1, 0x30, 0x03, 0x0E, 0xD2,
    0x68, 0x74, 0xE0, 0xCC, 0x2E, 0xCB, 0xE8, 0xE0, 0x59, 0x7A, 0x66, 0xF4,
    0x29, 0xA4, 0x3A, 0xB7, 0x33, 0x1C, 0x24, 0x0C, 0x39, 0xB9, 0xDA, 0x25,
    0x29, 0x97, 0x65, 0x2A, 0x95, 0xDF, 0x1F, 0x89, 0x18, 0x40, 0xB3, 0xB3,
    0xF8, 0xCF, 0x48, 0xC4, 0xEF, 0x57, 0xA9, 0x64, 0xB2, 0xB2, 0xC4, 0xA5,
    0x96, 0xE7, 0x08, 0x4D, 0x30, 0xEC, 0x74, 0xA3, 0x31, 0x3D, 0x96, 0x41,
    0xDB, 0x22, 0xE6, 0xCD, 0x18, 0x1E, 0x9E, 0xA2, 0x14, 0x60, 0x85, 0x32,
    0x6A, 0x32, 0x2B, 0xE6, 0x90, 0x41, 0x26, 0x53, 0xF9, 0xE1, 0xB3, 0x7B,
    0xEC, 0x76, 0x9B, 0xD7, 0xEB, 0x8D, 0xC5, 0x16, 0x88, 0x62, 0xB1, 0x98,
    0xD7, 0x6B, 0xB3, 0xDB, 0x3D, 0x40, 0x85, 0x3C, 0x48, 0x33, 0xA7, 0x30,
    0x9B, 0xA2, 0x4A, 0x30, 0x86, 0xB2, 0x4C, 0x0D, 0x0F, 0xF3, 0xB6, 0x88,
    0x07, 0x89, 0x41, 0xCD, 0x98, 0x87, 0x44, 0xB9, 0x9D, 0xC5, 0xA8, 0x15,
    0x9C, 0x50, 0xBB, 0xCA, 0x84, 0x01, 0x00, 0x62, 0x0B, 0xD9, 0x64, 0x3C,
    0x91, 0x28, 0x18, 0x8D, 0x46, 0x2D, 0x2F, 0xF8, 0xB1, 0x90, 0x48, 0xC4,
    0x93, 0xD9, 0xC5, 0x18, 0x00, 0x21, 0x8D, 0xAC, 0xEC, 0x52, 0x83, 0x33,
    0xD6, 0x68, 0x11, 0x7C, 0xD1, 0x4F, 0xCF, 0xF7, 0x6C, 0x19, 0x0C, 0xCA,
    0x5E, 0x0C, 0x34, 0xC3, 0x0D, 0x5E, 0x00, 0x85, 0x5C, 0x2D, 0x91, 0xA9,
    0x22, 0x60, 0x83, 0x77, 0x21, 0x1B, 0x07, 0x00, 0xAD, 0xA3, 0x94, 0xCE,
    0x54, 0x2A, 0x96, 0x40, 0x20, 0xE0, 0x23, 0x82, 0x1F, 0x2C, 0x96, 0x4A,
    0x26, 0x5D, 0x72, 0x68, 0x01, 0x28, 0x9E, 0x5D, 0xF0, 0x82, 0x39, 0x11,
    0x70, 0x46, 0x2D, 0x47, 0x16, 0xA5, 0xD3, 0x8D, 0xB6, 0x0C, 0x0C, 0x65,
    0x0F, 0x06, 0x64, 0x0A, 0xCC, 0x80, 0x5E, 0x98, 0x09, 0x85, 0xDF, 0x80,
    0x10, 0xC9, 0x44, 0x41, 0xEB, 0x48, 0x67, 0x2C, 0x01, 0x5F, 0x28, 0x9F,
    0x62, 0x96, 0xB8, 0x03, 0x5A, 0x62, 0x52, 0xF9, 0x90, 0x2F, 0x60, 0xC9,
    0xA4, 0x1D, 0xDA, 0x42, 0x22, 0x89, 0x30, 0x06, 0x3F, 0x61, 0x31, 0x43,
    0x5F, 0xC0, 0x16, 0x48, 0xD8, 0x20, 0x50, 0x0E, 0x62, 0x4C, 0x86, 0x83,
    0x56, 0x45, 0x8E, 0x52, 0xD8, 0x62, 0x59, 0x80, 0x28, 0x65, 0x2C, 0x80,
    0xC0, 0xC0, 0x67, 0xEE, 0xBE, 0x6E, 0x6F, 0x6C, 0xAE, 0xAE, 0x35, 0x3B,
    0xD5, 0x6A, 0x8D, 0x65, 0x6B, 0xD5, 0x6A, 0xA7, 0xB9, 0xB5, 0xBA, 0xB9,
    0xD1, 0x7E, 0xDD, 0x85, 0xFF, 0xC9, 0x00, 0x8E, 0x25, 0x53, 0x02, 0x98,
    0x6C, 0xCC, 0x46, 0x59, 0x72, 0x0A, 0x6B, 0x30, 0x3C, 0x39, 0x18, 0x14,
    0xE4, 0xC0, 0x8A, 0x23, 0x06, 0x16, 0x5C, 0x19, 0x05, 0x33, 0x5C, 0x65,
    0x55, 0x04, 0x28, 0x92, 0x09, 0xA3, 0x23, 0x6D, 0xF1, 0x21, 0x43, 0xF7,
    0xF5, 0xCA, 0x6A, 0xB3, 0xC5, 0xF2, 0xEA, 0xFF, 0xD0, 0x57, 0xAB, 0xB9,
    0xBA, 0x82, 0x38, 0x4C, 0xDE, 0x67, 0x49, 0x3B, 0x8C, 0x89, 0x24, 0xB0,
    0x44, 0x54, 0x65, 0x17, 0xD8, 0x12, 0x55, 0x62, 0xF1, 0x09, 0x0A, 0xD6,
    0xFE, 0x6C, 0x48, 0xC4, 0x74, 0x70, 0x69, 0x37, 0xF4, 0x80, 0x81, 0x99,
    0x02, 0x33, 0x66, 0xED, 0xDE, 0x6C, 0xC2, 0x58, 0xCA, 0x04, 0x42, 0xA9,
    0x25, 0xAE, 0xBE, 0xBD, 0xD3, 0x61, 0x3F, 0x48, 0x9D, 0x9D, 0xED, 0x3A,
    0xB7, 0x94, 0x0A, 0x05, 0x32, 0x25, 0x63, 0x22, 0xEB, 0xB5, 0xCF, 0x82,
    0x2D, 0x98, 0x30, 0x40, 0xD1, 0xD3, 0xAE, 0xD0, 0x31, 0x3E, 0x75, 0x14,
    0x72, 0x38, 0x20, 0x55, 0x53, 0x33, 0x24, 0x54, 0x80, 0x31, 0xA7, 0x96,
    0xA0, 0x19, 0x8B, 0x71, 0xA3, 0x03, 0x28, 0x18, 0xAE, 0xD1, 0xDE, 0xA9,
    0xB2, 0x47, 0x52, 0x75, 0xA7, 0xDD, 0xE0, 0x18, 0x60, 0x71, 0x18, 0xE3,
    0x8B, 0x68, 0x8B, 0x44, 0x3D, 0x87, 0x28, 0x18, 0x30, 0x18, 0xE3, 0x11,
    0x62, 0xCA, 0x47, 0x67, 0x95, 0xAA, 0xF9, 0xE9, 0x3E, 0x86, 0xC1, 0x03,
    0x66, 0x68, 0xD3, 0x96, 0x50, 0x8A, 0xEB, 0x6E, 0x6F, 0xB5, 0xD8, 0x63,
    0xA8, 0xB5, 0xB5, 0xDD, 0xE5, 0x52, 0x21, 0x4B, 0x5A, 0x0B, 0xB6, 0x78,
    0x0C, 0x7D, 0x14, 0x18, 0xE3, 0xB3, 0xC8, 0x97, 0x98, 0xB7, 0x03, 0x52,
    0x05, 0x83, 0x1B, 0x86, 0x6E, 0x20, 0x86, 0xDD, 0x9B, 0x2C, 0x80, 0x19,
    0xF9, 0x25, 0xAE, 0xBD, 0x76, 0x2C, 0x0A, 0x9E, 0x65, 0xAD, 0xCD, 0x2D,
    0xE5, 0xC1, 0x96, 0x42, 0xD2, 0x6B, 0x47, 0x14, 0xE8, 0x4A, 0x18, 0xC6,
    0x18, 0xF2, 0xC5, 0x9B, 0x22, 0x3E, 0x6D, 0x3B, 0x66, 0x44, 0x50, 0x0E,
    0x67, 0xD0, 0x0A, 0xDD, 0x00, 0x8C, 0x58, 0xDC, 0x58, 0xAA, 0xF8, 0x52,
    0x5C, 0x7D, 0xB3, 0xC6, 0x9E, 0x50, 0xB5, 0xCD, 0x3A, 0x97, 0xF2, 0x55,
    0x4A, 0xC6, 0x78, 0x0C, 0x51, 0xE4, 0x13, 0xD6, 0xA0, 0x13, 0xAA, 0x22,
    0x9A, 0x39, 0x55, 0x53, 0xC4, 0xBB, 0xED, 0x98, 0x96, 0x42, 0xAA, 0x14,
    0x39, 0x97, 0x2C, 0xE2, 0xF1, 0x26, 0x8D, 0x25, 0x0B, 0x34, 0xA3, 0xDD,
    0x64, 0x4F, 0x45, 0xCD, 0x36, 0xB4, 0xC5, 0x52, 0x32, 0x26, 0xBD, 0x9E,
    0x88, 0xCC, 0x95, 0x53, 0x40, 0xBE, 0xD0, 0x94, 0xA9, 0xD3, 0x33, 0x45,
    0x4C, 0x6E, 0x07, 0xB6, 0x83, 0xD8, 0x01, 0xE5, 0x90, 0xF9, 0x79, 0x8C,
    0x25, 0x6E, 0xA5, 0xC3, 0x9E, 0x92, 0x5A, 0x6C, 0x67, 0x85, 0x5B, 0xE2,
    0x51, 0xFC, 0x32, 0xA8, 0x0A, 0x35, 0x85, 0xCC, 0x17, 0xDC, 0x14, 0xF1,
    0xC9, 0xD7, 0x6A, 0xBF, 0x1D, 0x90, 0xAA, 0x59, 0x5B, 0xB6, 0xE0, 0xA8,
    0x80, 0x1B, 0x1B, 0x55, 0xF6, 0x54, 0x55, 0xDD, 0x00, 0x57, 0x2A, 0x8E,
    0x42, 0xD6, 0x36, 0x0B, 0xF9, 0x3A, 0x68, 0xCA, 0xE9, 0xB4, 0x5C, 0x34,
    0xAF, 0xD7, 0x51, 0x3B, 0x22, 0xF6, 0x58, 0x42, 0x9B, 0xF1, 0x31, 0xDC,
    0xCA, 0x29, 0x63, 0x10, 0x94, 0x15, 0x8E, 0xF1, 0x65, 0xB4, 0x89, 0x98,
    0x3D, 0x42, 0x4D, 0xD1, 0xE9, 0x61, 0xBE, 0x4E, 0x1E, 0x2F, 0x9E, 0x03,
    0x63, 0x05, 0x63, 0x45, 0xED, 0x80, 0x54, 0xA5, 0x03, 0x29, 0xAE, 0xDD,
    0x61, 0xCF, 0x44, 0x9D, 0x36, 0x97, 0x0A, 0xA4, 0x21, 0x5F, 0xD4, 0x14,
    0x98, 0xAF, 0x5E, 0xBC, 0x4E, 0x40, 0x42, 0x39, 0xF8, 0x58, 0x15, 0xAD,
    0x13, 0x68, 0xC7, 0x42, 0xC2, 0x61, 0xC9, 0x73, 0xF5, 0x2D, 0xF6, 0xCC,
    0xB4, 0x55, 0xE7, 0xF2, 0x16, 0x47, 0x62, 0x01, 0x4D, 0x99, 0xB0, 0x16,
    0xF9, 0x78, 0x9D, 0x84, 0x64, 0x0F, 0x07, 0xC6, 0x2A, 0xE7, 0xA2, 0x76,
    0xF8, 0x98, 0xC6, 0x4E, 0x8B, 0x3D, 0x43, 0xB5, 0x76, 0x1A, 0x8C, 0x8F,
    0x9A, 0xE2, 0xCA, 0x61, 0xBC, 0x4E, 0x48, 0x82, 0x73, 0x85, 0x35, 0x87,
    0x7A, 0x68, 0x30, 0x56, 0x65, 0xBF, 0x27, 0x46, 0xEC, 0x68, 0x57, 0xD9,
    0xB3, 0x55, 0xAB, 0xDA, 0x26, 0xA6, 0xC4, 0x3C, 0xFE, 0x32, 0xC6, 0x4B,
    0x03, 0x45, 0xC1, 0xCA, 0x1F, 0x6F, 0xBC, 0x78, 0x0E, 0x5C, 0x5D, 0xB7,
    0xD2, 0x04, 0xB1, 0x32, 0xD8, 0xB3, 0x68, 0x47, 0x77, 0x8D, 0x3D, 0x73,
    0xB5, 0x5A, 0x6B, 0x5D, 0x34, 0x25, 0x4B, 0xE2, 0x65, 0x52, 0xBA, 0x71,
    0x87, 0x8F, 0x49, 0xB2, 0xCB, 0x21, 0x75, 0x17, 0xAD, 0x73, 0x18, 0xAB,
    0xB8, 0xB6, 0x12, 0xE2, 0x5E, 0x56, 0x59, 0x76, 0x10, 0x24, 0xD5, 0x97,
    0x5C, 0xA8, 0xA2, 0x8D, 0x63, 0xBC, 0xE6, 0xAC, 0x45, 0x52, 0xF9, 0x63,
    0x91, 0xEC, 0xE1, 0x98, 0x2C, 0x9A, 0x73, 0x12, 0x15, 0x89, 0x55, 0x8A,
    0xDB, 0x64, 0x07, 0xA6, 0x4D, 0x2E, 0x45, 0xE2, 0xA5, 0x92, 0xE4, 0xCC,
    0x50, 0xF9, 0xE3, 0x91, 0x50, 0x0E, 0x32, 0xBB, 0x93, 0x50, 0x73, 0x89,
    0xDF, 0xB3, 0x58, 0x28, 0xF9, 0x98, 0xF5, 0x26, 0x3B, 0x40, 0x35, 0xD7,
    0x19, 0x5F, 0xA9, 0xB0, 0xE8, 0xF1, 0x03, 0x49, 0x90, 0x90, 0x5C, 0x3A,
    0x2A, 0x09, 0xEE, 0x15, 0xF5, 0x43, 0x37, 0x19, 0xC4, 0x9A, 0x63, 0x3D,
    0x20, 0x56, 0x35, 0x76, 0xA0, 0xAA, 0x41, 0xBC, 0xB0, 0x28, 0x58, 0xF9,
    0xE0, 0xA4, 0x8E, 0xF7, 0xE4, 0x08, 0xDB, 0xB5, 0x87, 0xC3, 0x89, 0x1C,
    0x11, 0x5B, 0x52, 0x5B, 0xC9, 0x73, 0x1B, 0x2D, 0x76, 0xC0, 0x6A, 0x6D,
    0x70, 0xF9, 0x8A, 0x36, 0x69, 0x8B, 0x20, 0x89, 0xF3, 0xE8, 0x24, 0x78,
    0x3F, 0x78, 0x8E, 0xA8, 0x42, 0x2E, 0x33, 0xD8, 0xE2, 0x5A, 0xA8, 0xC7,
    0x2A, 0x7B, 0x0E, 0x5A, 0x85, 0xA2, 0x68, 0xE3, 0x36, 0x83, 0x4C, 0xAE,
    0x88, 0xF2, 0x24, 0x1F, 0x7E, 0x4F, 0xE8, 0x1D, 0xA4, 0xFD, 0xA0, 0x1C,
    0x50, 0xF3, 0xC6, 0x16, 0x7B, 0x2E, 0xDA, 0x6A, 0x40, 0xE5, 0x29, 0x09,
    0xED, 0xC9, 0xF0, 0x07, 0xBF, 0x20, 0xC5, 0xF4, 0x9E, 0xF7, 0x39, 0xBC,
    0x71, 0x47, 0x80, 0x59, 0xEF, 0xB0, 0xE7, 0xA4, 0xCE, 0x3A, 0x13, 0x70,
    0xC4, 0xBD, 0x7D, 0x12, 0x7A, 0xE3, 0xC5, 0xC7, 0xE5, 0xA8, 0x9E, 0x17,
    0x07, 0x9C, 0xF9, 0xE3, 0x91, 0xF0, 0x1C, 0x33, 0xF3, 0x7A, 0x77, 0xD1,
    0x2C, 0x2F, 0x63, 0xAE, 0x02, 0x4C, 0xFD, 0xFC, 0x38, 0xF0, 0x6D, 0x5F,
    0x47, 0x12, 0x9B, 0xA1, 0x2C, 0x37, 0x17, 0xDD, 0xFA, 0xF9, 0x99, 0x0F,
    0x23, 0x21, 0x83, 0x75, 0x69, 0x66, 0x1C, 0x39, 0x72, 0xB0, 0x57, 0x84,
    0xA3, 0xC6, 0x9E, 0xAB, 0x6A, 0x94, 0x24, 0x52, 0xCE, 0x21, 0xC9, 0xF8,
    0xCC, 0x25, 0x32, 0x5D, 0xEF, 0x37, 0x04, 0x06, 0x6B, 0x7C, 0x5A, 0xA3,
    0xB4, 0xC2, 0x1D, 0x14, 0x04, 0xC7, 0x2E, 0x89, 0x24, 0x67, 0x55, 0x6A,
    0xA6, 0xC7, 0xE9, 0x74, 0x89, 0xDF, 0x1F, 0xAC, 0x2B, 0xA2, 0x69, 0x5D,
    0xD8, 0x34, 0x27, 0xF1, 0xDB, 0x93, 0x5A, 0xCB, 0x79, 0xF6, 0x63, 0x37,
    0x5D, 0xEB, 0x8C, 0x45, 0x9B, 0xB4, 0xFB, 0x25, 0x73, 0xA6, 0xB0, 0x6E,
    0x9A, 0x9F, 0x2E, 0xF1, 0x3B, 0x83, 0xC5, 0x17, 0xDD, 0x69, 0x9A, 0x70,
    0xA9, 0x3C, 0x59, 0xB8, 0x1F, 0x42, 0xE0, 0x40, 0x12, 0xB8, 0x27, 0x59,
    0x8F, 0xCA, 0x35, 0x61, 0x72, 0xF2, 0x85, 0x7F, 0x57, 0xB8, 0xF8, 0x82,
    0xCC, 0xE3, 0x60, 0xA9, 0x55, 0x9E, 0x45, 0x63, 0x25, 0xD5, 0xE8, 0xB0,
    0x82, 0x50, 0xA7, 0x9B, 0xAA, 0x18, 0x17, 0x3D, 0x2A, 0x35, 0x4E, 0xD7,
    0xFC, 0x7B, 0x6A, 0xC2, 0x07, 0x8B, 0x14, 0x5D, 0x2E, 0x9B, 0x8D, 0x15,
    0xD2, 0x79, 0x6E, 0x8B, 0x15, 0x88, 0x9A, 0x5C, 0x3E, 0x5D, 0x88, 0xCD,
    0xCA, 0xC8, 0x74, 0x8D, 0xBF, 0x3B, 0x5C, 0x7C, 0xB0, 0xA0, 0x20, 0x56,
    0x18, 0x2C, 0x6F, 0xA2, 0x14, 0x3A, 0x9F, 0x77, 0xC9, 0xDB, 0x5E, 0x2B,
    0xA1, 0x52, 0xC2, 0x6B, 0x28, 0xE7, 0xAC, 0x58, 0x93, 0x77, 0x85, 0x4B,
    0x4C, 0x83, 0x45, 0x0B, 0xE2, 0xB7, 0xC7, 0x1D, 0x3E, 0x6E, 0x83, 0x15,
    0x90, 0x36, 0x38, 0x9F, 0x23, 0x6E, 0xF7, 0xD3, 0x9A, 0xD0, 0x70, 0x89,
    0xDF, 0x1E, 0x2C, 0xB8, 0x20, 0xB4, 0x20, 0x50, 0x74, 0xE6, 0x65, 0x4B,
    0x48, 0x20, 0xAD, 0x97, 0x0C, 0x29, 0x3C, 0xD6, 0x04, 0xAE, 0xC9, 0x5B,
    0xC3, 0x45, 0x82, 0x05, 0xCB, 0xAB, 0x51, 0x92, 0x82, 0x40, 0xD1, 0xD7,
    0x6B, 0xAC, 0xA0, 0x54, 0x5B, 0x87, 0xC2, 0x93, 0x9A, 0xC0, 0x35, 0x21,
    0x1B, 0x7C, 0x58, 0xB8, 0xC8, 0x29, 0xA4, 0xC1, 0x9A, 0x93, 0x40, 0x41,
    0xD2, 0x21, 0xAE, 0xC9, 0x0A, 0x4C, 0x4D, 0x2E, 0x94, 0x4E, 0x78, 0x23,
    0x70, 0x4D, 0x68, 0xB8, 0x0E, 0xB5, 0xA4, 0xB7, 0x58, 0x24, 0x58, 0xF6,
    0x24, 0x14, 0x64, 0x93, 0x15, 0x9C, 0x36, 0xA1, 0x26, 0x49, 0x3B, 0x1F,
    0x2E, 0xBA, 0x5C, 0x87, 0x35, 0x1D, 0x17, 0x8B, 0x06, 0x6B, 0xC1, 0x08,
    0x05, 0x61, 0x05, 0x28, 0xA8, 0x89, 0x71, 0xA1, 0x17, 0x2E, 0x58, 0xAE,
    0x37, 0x2D, 0x41, 0x43, 0xF0, 0x14, 0xF6, 0x82, 0x95, 0xEF, 0x56, 0x85,
    0x08, 0x52, 0xED, 0xE6, 0xFB, 0xE1, 0x82, 0xB3, 0xF8, 0xA6, 0x25, 0xC4,
    0x10, 0x78, 0x2B, 0xBA, 0xFB, 0xC1, 0x5A, 0x13, 0x22, 0x07, 0xDB, 0x5A,
    0xEB, 0x87, 0xCB, 0x8D, 0xAF, 0xC7, 0x37, 0x2C, 0xE1, 0x9B, 0x8E, 0xA7,
    0x10, 0x17, 0xCB, 0xC2, 0xB4, 0x59, 0x81, 0xAA, 0x0D, 0xE1, 0x82, 0xE5,
    0xC2, 0xB3, 0xC8, 0xF7, 0xFD, 0x10, 0x43, 0xF4, 0x93, 0x51, 0x38, 0x85,
    0x36, 0x08, 0x56, 0xA3, 0x2A, 0x50, 0x8E, 0x56, 0xB5, 0x01, 0xE1, 0xB2,
    0xC1, 0x59, 0x8C, 0xD2, 0xBE, 0xEF, 0xB7, 0x84, 0x18, 0x22, 0x1A, 0xD3,
    0x61, 0xD3, 0xE1, 0x14, 0x06, 0xB8, 0x1D, 0x56, 0xB0, 0xDA, 0xE1, 0x02,
    0x70, 0x16, 0xB1, 0xEF, 0xBA, 0x31, 0xD1, 0x01, 0x4B, 0xFA, 0x86, 0x98,
    0x26, 0xA0, 0xE9, 0x85, 0x4C, 0xAA, 0xDE, 0x12, 0x2E, 0x48, 0xAB, 0x9E,
    0xCA, 0x14, 0xA0, 0xEF, 0x13, 0xA6, 0x37, 0x2D, 0xA1, 0x86, 0xE0, 0xF4,
    0xC2, 0xDB, 0x04, 0x9B, 0xBE, 0xC5, 0x0A, 0x58, 0x5B, 0xD8, 0x77, 0x78,
    0xA9, 0x90, 0x09, 0xDE, 0x67, 0x09, 0x6F, 0x88, 0x74, 0x12, 0xA6, 0xD7,
    0xE0, 0x35, 0x56, 0x84, 0xDB, 0xF4, 0x5E, 0xDF, 0x2B, 0x46, 0xAF, 0x01,
    0x26, 0x78, 0x52, 0xBA, 0xDF, 0x12, 0x78, 0x65, 0x61, 0x43, 0x88, 0x21,
    0xF6, 0x38, 0x3C, 0xDE, 0x3B, 0xC2, 0x06, 0xE9, 0xC0, 0x83, 0x3E, 0x6E,
    0x27, 0x96, 0x90, 0x96, 0xF4, 0x5F, 0x5C, 0xFD, 0x86, 0x80, 0x21, 0x38,
    0xBD, 0x2B, 0xAC, 0xC0, 0xB5, 0x82, 0x13, 0x4C, 0x2C, 0xE1, 0x5B, 0xD2,
    0x4B, 0x16, 0x1E, 0x75, 0x9C, 0x2C, 0xDE, 0x90, 0xAA, 0xD0, 0x41, 0xAA,
    0x7D, 0x4B, 0xF0, 0x96, 0xC0, 0x23, 0x58, 0xDC, 0xAB, 0x3A, 0x7F, 0x43,
    0xB0, 0x21, 0x96, 0x25, 0xC1, 0x1B, 0xC2, 0xB2, 0x1B, 0x4B, 0x7B, 0x2D,
    0xE1, 0xEB, 0x4E, 0xAA, 0x8E, 0x47, 0xDD, 0x2C, 0x87, 0xC9, 0x2A, 0x85,
    0x1A, 0x35, 0xE1, 0x83, 0xD4, 0x1A, 0xA1, 0x12, 0x0C, 0x97, 0xDC, 0x8C,
    0xE7, 0xBD, 0x57, 0x77, 0x48, 0xD6, 0x08, 0x3C, 0x7B, 0xDD, 0x51, 0x72,
    0x43, 0x2A, 0xCC, 0x05, 0x30, 0x84, 0x6D, 0xAD, 0x30, 0x15, 0x72, 0x4B,
    0xA2, 0x6E, 0xBD, 0x68, 0x8A, 0xAF, 0x3B, 0x31, 0x64, 0x5E, 0x1A, 0xB6,
    0xE2, 0x51, 0x87, 0x1B, 0xD2, 0xB9, 0x00, 0x20, 0x30, 0x5C, 0x3E, 0x07,
    0x9E, 0x77, 0x6B, 0x18, 0x1E, 0xC1, 0xB4, 0xEE, 0xA4, 0xEA, 0x22, 0x7C,
    0xF6, 0xE2, 0x2B, 0x2B, 0x93, 0x6A, 0xB3, 0x17, 0x42, 0xED, 0x54, 0x06,
    0x5F, 0x5C, 0xF8, 0x08, 0x16, 0xD1, 0xBA, 0xE3, 0x55, 0x87, 0xAA, 0x3B,
    0x4D, 0xB9, 0xF2, 0xEC, 0x22, 0xBC, 0xB2, 0x9A, 0x17, 0x03, 0xA4, 0x09,
    0x2F, 0xAE, 0xC5, 0xD9, 0x72, 0xCE, 0xE4, 0x84, 0xBA, 0x93, 0xEB, 0xCE,
    0x57, 0x9D, 0x6E, 0x6F, 0x3A, 0x5F, 0x67, 0x2F, 0x88, 0xEA, 0xF9, 0x74,
    0x7F, 0x81, 0x49, 0xB6, 0xF8, 0x64, 0x91, 0xAA, 0xC3, 0xF6, 0x6E, 0x5E,
    0x14, 0x90, 0x1D, 0x58, 0x60, 0x5A, 0x77, 0x9A, 0x2D, 0x00, 0x81, 0x64,
    0x49, 0x9D, 0xB4, 0xEA, 0x21, 0xAE, 0x76, 0x51, 0x40, 0x6A, 0x5C, 0x88,
    0xD6, 0xDD, 0x89, 0x0F, 0x2E, 0x00, 0x21, 0xC9, 0xD2, 0x14, 0x15, 0xEA,
    0x8B, 0x54, 0x75, 0xD4, 0x36, 0xA9, 0xBB, 0x5A, 0x51, 0xD4, 0x90, 0x6C,
    0x01, 0x08, 0x24, 0x8B, 0x5C, 0xF5, 0x98, 0x31, 0x20, 0xD0, 0x6F, 0xEA,
    0x87, 0x9E, 0x92, 0x2D, 0x2E, 0x80, 0xD7, 0x1D, 0xBE, 0x29, 0x62, 0xB6,
    0x46, 0x87, 0x76, 0x93, 0x05, 0x57, 0xBD, 0x4B, 0xBE, 0x50, 0xDD, 0xBC,
    0xF7, 0x56, 0x3D, 0xBD, 0x79, 0xC8, 0xAF, 0x7C, 0x71, 0xEF, 0xC9, 0xD1,
    0x3F, 0xC8, 0x27, 0x9F, 0xFF, 0xEE, 0xC5, 0x81, 0x5F, 0xF6, 0xF4, 0xDE,
    0x07, 0xEA, 0x13, 0xF2, 0x67, 0xBB, 0x78, 0xDD, 0xF9, 0x6C, 0x8D, 0x7C,
    0x3C, 0x44, 0x37, 0x8B, 0x26, 0x8B, 0xD9, 0x26, 0xBF, 0xF0, 0xC9, 0x7F,
    0x3E, 0x7B, 0x86, 0xBA, 0x73, 0xE7, 0x33, 0xA2, 0x2F, 0x41, 0xDF, 0x80,
    0xEE, 0xDE, 0xFD, 0xE6, 0xD5, 0xB7, 0x3F, 0x3E, 0x3E, 0xF8, 0xA9, 0x5F,
    0x7C, 0x79, 0xFD, 0x57, 0x5F, 0x3F, 0xBE, 0x79, 0x24, 0x8C, 0x27, 0x8F,
    0xBF, 0x7E, 0xF0, 0xF3, 0x5F, 0x3F, 0xDD, 0x4B, 0xF1, 0xD7, 0xFF, 0xFF,
    0xF0, 0xEC, 0x0E, 0xFE, 0xD9, 0x57, 0xA0, 0x7F, 0x12, 0x3D, 0x78, 0xF0,
    0xF0, 0xE1, 0xC3, 0xEF, 0x79, 0x7D, 0x4B, 0xF4, 0xE8, 0xD1, 0xA3, 0xEF,
    0xFF, 0xFD, 0x84, 0x7F, 0x03, 0xD3, 0x6C, 0xD1, 0xDD, 0x1A, 0xEA, 0x6D,
    0x16, 0x49, 0x16, 0xFD, 0x66, 0x78, 0xF3, 0xCF, 0x57, 0x9F, 0x3F, 0x7F,
    0xBE, 0xBC, 0x7C, 0x1F, 0x75, 0xF5, 0xEA, 0xD5, 0x9F, 0xA1, 0x6E, 0xDC,
    0xB8, 0x76, 0xED, 0xD3, 0xDB, 0xB7, 0x6F, 0x7D, 0x7A, 0xFD, 0xD5, 0xDF,
    0xF7, 0xA3, 0xDC, 0xFB, 0xE3, 0xFF, 0xBE, 0xFA, 0xEA, 0xDA, 0x0F, 0x8F,
    0x8F, 0xC0, 0xF1, 0xF8, 0xE1, 0xF5, 0xDB, 0xB7, 0x7E, 0x7F, 0xF7, 0x97,
    0xBB, 0x60, 0xFF, 0x7A, 0xF6, 0x8B, 0xAB, 0xF7, 0xEF, 0x2F, 0x2F, 0x2F,
    0xC3, 0x5F, 0xFE, 0xC7, 0xDF, 0x50, 0xBF, 0x41, 0xFD, 0x16, 0xF5, 0x1D,
    0xEA, 0x4F, 0x44, 0x7F, 0x01, 0x7D, 0xF7, 0xDF, 0xCF, 0x6F, 0xD2, 0x6F,
    0x8A, 0x7C, 0xB6, 0xC8, 0x6E, 0x0D, 0x8D, 0x4C, 0x91, 0x6B, 0x48, 0x36,
    0xAB, 0xC1, 0x7F, 0x55, 0xFF, 0xF1, 0x0B, 0xF2, 0xAB, 0xE0, 0x77, 0x7E,
    0xB1, 0x8C, 0xA2, 0x3C, 0x84, 0xE8, 0xC6, 0x8D, 0x5B, 0x7F, 0xB8, 0xF6,
    0x6A, 0xDF, 0x87, 0xBE, 0x77, 0xFD, 0x27, 0x4E, 0xED, 0xF5, 0xB7, 0x6D,
    0xEB, 0x0A, 0x00, 0xB8, 0x5A, 0xEC, 0x53, 0x81, 0x0E, 0x28, 0x06, 0xE4,
    0xF5, 0x65, 0x43, 0xBF, 0x14, 0x2B, 0x96, 0x35, 0x18, 0x32, 0xA0, 0x68,
    0x3F, 0x74, 0xEB, 0x8A, 0x16, 0x2B, 0x1B, 0x49, 0x14, 0xF5, 0xA2, 0x1E,
    0x16, 0x25, 0x52, 0x0F, 0xCB, 0xB6, 0x14, 0x59, 0x72, 0x58, 0x4B, 0x91,
    0x6D, 0xDA, 0x92, 0xEC, 0x24, 0x70, 0xBC, 0xD8, 0x73, 0xB2, 0xC9, 0x8E,
    0xE2, 0xD5, 0x1B, 0x96, 0x69, 0x1E, 0xEC, 0x0D, 0x8D, 0x3D, 0xA0, 0xF9,
    0xE3, 0x7A, 0xCE, 0xBD, 0x97, 0xE4, 0x95, 0x4C, 0x91, 0x6A, 0x8F, 0x82,
    0x00, 0x51, 0x60, 0xE9, 0xFE, 0x78, 0xEE, 0xE3, 0xDC, 0x7B, 0x5D, 0x6C,
    0xD6, 0x8B, 0x83, 0xD6, 0xCE, 0xD4, 0xDD, 0x7B, 0x47, 0x6C, 0x46, 0x43,
    0x91, 0xD8, 0xD1, 0x8C, 0x40, 0xF3, 0xF8, 0x62, 0x7B, 0x49, 0x8A, 0x94,
    0x33, 0x40, 0x20, 0x86, 0xD5, 0x55, 0x24, 0x20, 0x62, 0x8D, 0x22, 0xD6,
    0x2C, 0x04, 0xC6, 0xFD, 0xA1, 0x40, 0x7E, 0xEE, 0xC5, 0x9F, 0xC9, 0xBC,
    0x45, 0xD6, 0xC4, 0x6B, 0x3F, 0xF1, 0xBD, 0xF9, 0xDE, 0xA7, 0x50, 0xF8,
    0xC2, 0x6A, 0xF8, 0xE1, 0xC7, 0xD6, 0x9C, 0xD5, 0xA9, 0x3C, 0x25, 0x8C,
    0xA7, 0xB3, 0x99, 0xF1, 0xBC, 0x44, 0x20, 0x31, 0x05, 0x4D, 0xDC, 0x09,
    0x8F, 0x40, 0xEA, 0x10, 0x83, 0xFA, 0xFC, 0x94, 0x90, 0xF3, 0x40, 0x3D,
    0x18, 0x0A, 0x45, 0xA2, 0x00, 0x11, 0xE8, 0x27, 0x2C, 0x86, 0xFC, 0xB3,
    0x99, 0x8C, 0x29, 0x21, 0x10, 0x2E, 0x1B, 0x2C, 0x19, 0xA6, 0x64, 0xBD,
    0x23, 0x50, 0xC9, 0xDF, 0x3F, 0xFA, 0xF8, 0x43, 0x5C, 0x13, 0x7F, 0x73,
    0xFD, 0xD3, 0xF7, 0xDE, 0xF4, 0xE1, 0xE4, 0x0B, 0x75, 0x16, 0x14, 0xBE,
    0xEF, 0x7E, 0x69, 0x1E, 0x02, 0xF5, 0x8E, 0xCB, 0x7F, 0x3D, 0xC4, 0x7C,
    0x64, 0xEC, 0x7C, 0x44, 0xFC, 0x66, 0x07, 0x0B, 0x06, 0x63, 0x5A, 0xF4,
    0xDC, 0x92, 0xBC, 0xC8, 0x89, 0x03, 0x84, 0x68, 0x03, 0x6D, 0xBA, 0x9C,
    0xEC, 0x45, 0xEB, 0xF0, 0x19, 0xA1, 0x50, 0x01, 0x21, 0x28, 0xD9, 0x5E,
    0x0C, 0xFA, 0xE1, 0x7B, 0x78, 0xC9, 0xAA, 0x43, 0xC7, 0x62, 0x92, 0xFB,
    0x0F, 0xF0, 0xC7, 0x50, 0x42, 0xD7, 0x44, 0xA8, 0xB7, 0x70, 0x02, 0xF6,
    0xE1, 0xE4, 0xFB, 0xF3, 0x4F, 0x3E, 0xBF, 0xFD, 0xD9, 0xD5, 0x9B, 0xF6,
    0xD6, 0x70, 0x28, 0x3F, 0x3D, 0x1C, 0x75, 0x30, 0x06, 0x3A, 0x02, 0x30,
    0x54, 0xB4, 0xA6, 0x2D, 0xC9, 0xA5, 0x06, 0x75, 0x0D, 0xE3, 0x22, 0xAA,
    0x4F, 0xE1, 0x78, 0xDC, 0xD2, 0x02, 0x01, 0x94, 0x50, 0x88, 0xF0, 0x55,
    0xF8, 0x34, 0xE8, 0xC7, 0xD1, 0xC1, 0x4B, 0x16, 0xCC, 0xCE, 0x35, 0x3E,
    0x40, 0x1E, 0x3D, 0xEA, 0x0E, 0x05, 0x81, 0x4A, 0xBE, 0xBE, 0x73, 0xF3,
    0xEA, 0x67, 0xB7, 0x3F, 0x87, 0xED, 0x15, 0x0C, 0x12, 0xDF, 0x35, 0x6B,
    0xF2, 0xE5, 0xEA, 0xAC, 0x5E, 0xC3, 0x8F, 0x8E, 0xCC, 0xE8, 0xF8, 0x88,
    0x58, 0x8E, 0x28, 0x48, 0xF6, 0xAC, 0x8C, 0xA4, 0x06, 0x1A, 0x8D, 0x0B,
    0xB1, 0xEF, 0xE9, 0xE8, 0x4B, 0xC5, 0x58, 0x8C, 0x48, 0x0A, 0x2A, 0x81,
    0x08, 0xBA, 0x18, 0x2A, 0x97, 0x2D, 0xC9, 0x21, 0xD7, 0xBB, 0xEE, 0x8E,
    0xA4, 0xE4, 0x11, 0xA1, 0xAC, 0x9D, 0xD2, 0x9F, 0x42, 0xC9, 0x9F, 0x7E,
    0x67, 0x4D, 0xC0, 0xD7, 0x7C, 0xD6, 0x10, 0x31, 0x27, 0x5F, 0xFA, 0x75,
    0x8A, 0xFF, 0xA9, 0xE9, 0xE0, 0x26, 0xAE, 0x10, 0x73, 0x40, 0x14, 0x5B,
    0x1D, 0x3B, 0x23, 0xA8, 0x28, 0x42, 0x5C, 0xA8, 0xDB, 0x1E, 0x8E, 0x6D,
    0xA5, 0x58, 0x88, 0x51, 0x49, 0x93, 0x41, 0x1A, 0x31, 0x7F, 0x99, 0x4A,
    0xAC, 0x94, 0xF0, 0x7D, 0xCB, 0xCE, 0x08, 0x71, 0x2C, 0xF7, 0x05, 0x33,
    0xC2, 0xFF, 0x85, 0x09, 0xD8, 0x1C, 0x24, 0x3E, 0x52, 0x9F, 0xFC, 0xF2,
    0xD7, 0x30, 0x44, 0x46, 0xCE, 0x49, 0xF5, 0x44, 0x64, 0x96, 0x83, 0x8C,
    0x25, 0x24, 0x5A, 0x28, 0x34, 0x07, 0x4A, 0x8F, 0xCF, 0x48, 0xB1, 0x08,
    0x7F, 0x06, 0x17, 0x0D, 0xF7, 0xF5, 0xA4, 0xD7, 0x28, 0x36, 0xA3, 0x51,
    0x06, 0xA9, 0x10, 0x48, 0x5F, 0x0E, 0x9A, 0x10, 0x3B, 0x25, 0xAB, 0x4E,
    0x29, 0x81, 0x9C, 0xAC, 0x35, 0x74, 0xC1, 0x8E, 0x6F, 0xEE, 0xBC, 0xFB,
    0xFB, 0x5F, 0xC1, 0xA6, 0x04, 0xAB, 0x14, 0x1F, 0x5B, 0x45, 0x70, 0x88,
    0x8C, 0xEC, 0x0D, 0x3B, 0x69, 0xBF, 0x7F, 0xD2, 0x08, 0x41, 0x48, 0x41,
    0xAB, 0x0F, 0xB9, 0x8C, 0x10, 0x07, 0x48, 0x06, 0xEE, 0x53, 0xD7, 0xB9,
    0xA6, 0x45, 0xC7, 0x20, 0xC3, 0x56, 0xC4, 0xCF, 0x24, 0x19, 0x27, 0x08,
    0x99, 0x82, 0x69, 0x46, 0xD6, 0xF2, 0x4B, 0x1D, 0xCE, 0x21, 0x90, 0x41,
    0xC2, 0x56, 0x12, 0xDF, 0x1B, 0x37, 0xDE, 0x81, 0x55, 0xE4, 0x36, 0xAC,
    0x22, 0xFF, 0x1B, 0xFD, 0xCE, 0xDC, 0x83, 0x38, 0xB4, 0x9F, 0x43, 0x00,
    0x21, 0x40, 0x16, 0x45, 0x0A, 0x29, 0x0C, 0xD4, 0x9E, 0x9D, 0x91, 0x22,
    0x8B, 0x0B, 0x6D, 0xE8, 0xE2, 0x18, 0x16, 0x8A, 0x85, 0x02, 0x85, 0x04,
    0x4C, 0xC8, 0xEB, 0x68, 0x84, 0x7C, 0x8D, 0xDF, 0xEA, 0x5E, 0x99, 0xC3,
    0xFD, 0x55, 0x5B, 0x92, 0x37, 0x31, 0x77, 0xF3, 0xC7, 0xE7, 0x35, 0x61,
    0x24, 0xFE, 0x05, 0x2B, 0xC9, 0x6D, 0x58, 0x49, 0xDE, 0xB9, 0xF1, 0x86,
    0x8F, 0x8E, 0x75, 0xDC, 0x53, 0x8D, 0xDF, 0xB5, 0x09, 0x9D, 0xD7, 0xBB,
    0x59, 0x49, 0x12, 0x21, 0xFC, 0x29, 0x88, 0x56, 0xAB, 0x55, 0x68, 0x06,
    0x82, 0x66, 0x46, 0x9A, 0xC5, 0x98, 0xCE, 0x8D, 0x91, 0x22, 0xB3, 0x5C,
    0xB4, 0x26, 0x2F, 0xF1, 0x9D, 0xD6, 0xA0, 0x30, 0x0E, 0x49, 0x2E, 0x06,
    0xF0, 0x1B, 0x24, 0x08, 0x19, 0xC2, 0x88, 0xC7, 0xB3, 0x95, 0x43, 0x92,
    0x11, 0x90, 0x00, 0x22, 0xDF, 0x6E, 0x9F, 0xD0, 0xA2, 0x65, 0x63, 0xBE,
    0x93, 0x1C, 0x75, 0x08, 0xFF, 0xC0, 0xDD, 0x15, 0x1D, 0xED, 0x3E, 0x3A,
    0xD6, 0xB1, 0xD0, 0xBA, 0x7C, 0x7C, 0x22, 0xCC, 0xF4, 0xF5, 0xC7, 0x7C,
    0xBC, 0x36, 0x9A, 0xD1, 0x20, 0x19, 0xEC, 0x44, 0xF2, 0x9A, 0x9F, 0xB5,
    0x58, 0x4A, 0x06, 0x17, 0x46, 0x6E, 0x82, 0x23, 0x67, 0x0C, 0x9A, 0xE8,
    0x18, 0xE9, 0x5A, 0xC9, 0xC7, 0x07, 0x8F, 0x47, 0x43, 0xD7, 0x1F, 0x64,
    0x68, 0xDF, 0xCA, 0x2F, 0xE4, 0x57, 0x5F, 0xEB, 0x34, 0x3A, 0xB9, 0x99,
    0x71, 0x86, 0x20, 0xFC, 0x1B, 0xCB, 0x2D, 0x3A, 0xDA, 0x7D, 0xF6, 0x58,
    0x77, 0xF8, 0x75, 0x8D, 0xF0, 0xD8, 0x0F, 0x26, 0x73, 0xBB, 0xCD, 0x58,
    0xC0, 0x94, 0x14, 0x37, 0x05, 0x6E, 0xD6, 0x62, 0x18, 0x6D, 0x70, 0xB1,
    0xEB, 0x5C, 0x0C, 0x6F, 0xA7, 0x47, 0x1C, 0x21, 0x73, 0xFA, 0xBD, 0x1C,
    0x7B, 0x99, 0x7D, 0xDA, 0xB3, 0xF2, 0x77, 0xF7, 0xE7, 0x93, 0xC2, 0xE4,
    0xF8, 0xA7, 0x3D, 0xDA, 0x7D, 0x6F, 0xBD, 0x7F, 0x8B, 0x55, 0x8C, 0x4E,
    0xC7, 0x0E, 0xE3, 0x12, 0xA1, 0x56, 0xA9, 0xB3, 0x09, 0x18, 0x32, 0x22,
    0xD5, 0xC2, 0x34, 0x23, 0xF5, 0xBA, 0x66, 0x59, 0xB4, 0xC1, 0xE0, 0xD4,
    0x11, 0xF2, 0xA4, 0xA8, 0x59, 0x0E, 0x77, 0xC8, 0x3C, 0x42, 0x56, 0xDB,
    0x00, 0xC9, 0xEF, 0xCF, 0xBB, 0x38, 0x84, 0xFF, 0xB3, 0xBA, 0xF1, 0xD6,
    0xFB, 0x6F, 0xF9, 0x60, 0xD2, 0xFA, 0x04, 0xCF, 0x4F, 0x6E, 0xDE, 0x71,
    0xBC, 0xDC, 0xB9, 0x24, 0xD9, 0xC1, 0x76, 0x50, 0x89, 0x96, 0xEA, 0x63,
    0xA5, 0x60, 0x96, 0x28, 0x56, 0x0C, 0x8A, 0x4E, 0xB5, 0xCA, 0x5E, 0x5D,
    0xA3, 0xE3, 0x83, 0x2E, 0x87, 0x21, 0x4F, 0xC8, 0x42, 0x3B, 0x8F, 0x10,
    0xB7, 0x8C, 0xF4, 0x60, 0xDA, 0xFA, 0x23, 0xAC, 0xED, 0x30, 0x6D, 0xF9,
    0x26, 0x4D, 0x5A, 0x93, 0x24, 0x39, 0xA9, 0x40, 0xA6, 0x60, 0xA0, 0xD4,
    0x5B, 0x7D, 0x5C, 0x5F, 0x59, 0xD1, 0x48, 0x43, 0x03, 0x50, 0xFD, 0x22,
    0x70, 0xB9, 0x56, 0x39, 0x08, 0x16, 0xA3, 0x51, 0xDE, 0x11, 0x8A, 0x1E,
    0xB9, 0x42, 0x16, 0x58, 0x46, 0xDC, 0x20, 0xDC, 0xB4, 0xE5, 0xBB, 0x61,
    0x16, 0x28, 0xDF, 0x7E, 0x35, 0x95, 0x64, 0xC6, 0x28, 0xB0, 0xD5, 0x24,
    0x46, 0x20, 0x42, 0x18, 0xCB, 0x78, 0x88, 0x3A, 0x17, 0x17, 0x52, 0xFF,
    0x72, 0x65, 0x62, 0x32, 0xA8, 0x23, 0x12, 0x89, 0xBA, 0x66, 0xA4, 0x4D,
    0x12, 0xE2, 0x31, 0x46, 0x84, 0x6F, 0xCD, 0x22, 0xE5, 0x86, 0x0F, 0xCF,
    0x4A, 0xF1, 0x44, 0x6B, 0xF2, 0xB9, 0xC3, 0xA8, 0xA4, 0x2F, 0x45, 0xD9,
    0xC2, 0x18, 0x68, 0x12, 0x88, 0xC0, 0x20, 0x24, 0xEA, 0xF8, 0x82, 0x3F,
    0x03, 0x65, 0xFB, 0x52, 0x65, 0x62, 0x31, 0x20, 0x1B, 0xE0, 0x20, 0xFB,
    0x91, 0x09, 0x90, 0xF8, 0xFE, 0xE6, 0x6A, 0x1B, 0x21, 0x5E, 0x19, 0xF9,
    0xDB, 0x47, 0x78, 0xBA, 0x85, 0x27, 0xA7, 0x00, 0x61, 0x95, 0xD6, 0xE4,
    0xDF, 0xCD, 0x1A, 0x91, 0xEC, 0x91, 0x76, 0x10, 0x4A, 0x53, 0xCC, 0x91,
    0xF1, 0x2F, 0x69, 0xB8, 0x3E, 0x36, 0x0B, 0x4D, 0x3B, 0xB4, 0xE2, 0x72,
    0x78, 0xB4, 0x32, 0x31, 0x2B, 0x2C, 0x74, 0xB4, 0x5A, 0xB8, 0xC8, 0x06,
    0x12, 0x93, 0x21, 0x9B, 0x9B, 0xED, 0x05, 0x74, 0xDC, 0xDD, 0x74, 0x87,
    0xFC, 0xC7, 0xAC, 0xB6, 0x7E, 0xEA, 0xC3, 0x33, 0x46, 0xD8, 0xAF, 0x7F,
    0xE1, 0x76, 0x34, 0xC7, 0x49, 0xFA, 0xD9, 0x98, 0x55, 0xAE, 0x34, 0x8D,
    0x1A, 0x85, 0xD4, 0xA3, 0x74, 0x3E, 0xE6, 0xA2, 0xC8, 0x6F, 0xB3, 0x5E,
    0x9C, 0x37, 0x9B, 0x01, 0xB3, 0x4F, 0x01, 0x03, 0x1C, 0x29, 0x7F, 0x2A,
    0xE8, 0x0E, 0x21, 0x09, 0x29, 0x79, 0x40, 0xBE, 0xF9, 0xF2, 0x0B, 0xDC,
    0xB7, 0xFF, 0xE2, 0x67, 0xD7, 0x7D, 0xD7, 0x5D, 0x96, 0x91, 0xCB, 0x92,
    0x4E, 0x22, 0x90, 0xA2, 0xA5, 0x30, 0x58, 0x9A, 0x55, 0xF2, 0x25, 0x35,
    0xB9, 0x1E, 0xC3, 0xC1, 0x4F, 0x8A, 0x62, 0x2B, 0xB4, 0xE0, 0x81, 0x5D,
    0x99, 0x04, 0x71, 0x2B, 0x45, 0xFB, 0x14, 0xC9, 0x46, 0x2A, 0x05, 0x25,
    0x49, 0x48, 0x71, 0x81, 0xB4, 0x09, 0xA4, 0xE4, 0x05, 0xB1, 0x16, 0x92,
    0xEB, 0x3E, 0x5C, 0x0F, 0xF1, 0xB0, 0x94, 0x3B, 0xD2, 0x7A, 0x31, 0xDC,
    0x19, 0xEE, 0x38, 0xC6, 0x86, 0x11, 0xC4, 0xAA, 0x28, 0x95, 0x22, 0x92,
    0xD8, 0x1E, 0x5D, 0x5A, 0x0C, 0xF2, 0xB8, 0x49, 0xC4, 0xEC, 0xD0, 0xAC,
    0x01, 0xAF, 0x8B, 0xF5, 0x10, 0x43, 0x50, 0x05, 0x32, 0xFC, 0xA2, 0x0B,
    0x24, 0xDB, 0x66, 0x09, 0xF1, 0x82, 0xFC, 0xE5, 0x0E, 0xDD, 0x24, 0xFE,
    0xE1, 0x8A, 0xEF, 0xCA, 0xAD, 0xB7, 0x11, 0xC2, 0xAF, 0x87, 0xBD, 0xE5,
    0xCC, 0xD6, 0xD6, 0x56, 0x36, 0x9B, 0x8D, 0x43, 0x64, 0x32, 0x50, 0x01,
    0x61, 0x25, 0x84, 0x25, 0x57, 0x24, 0x52, 0x2E, 0x8B, 0x64, 0x9F, 0x05,
    0x98, 0x80, 0xD4, 0x67, 0x90, 0x02, 0xD9, 0x00, 0x07, 0x03, 0xF8, 0xB2,
    0x43, 0x63, 0x03, 0x3E, 0xA7, 0xD6, 0xAD, 0x0E, 0x85, 0x0A, 0x70, 0x88,
    0x7E, 0x51, 0x2C, 0x47, 0x26, 0x43, 0xB6, 0x08, 0xA4, 0x54, 0xF2, 0x84,
    0xE0, 0x8A, 0x08, 0x90, 0xB7, 0x6F, 0x5D, 0xF1, 0x59, 0x0B, 0xBB, 0x5D,
    0xC4, 0xF7, 0x36, 0x0E, 0xB1, 0xFA, 0xDC, 0xDF, 0x87, 0x8A, 0x9A, 0x5A,
    0xE8, 0x66, 0x11, 0x43, 0x02, 0x89, 0x48, 0xF7, 0x8C, 0xD1, 0x46, 0x92,
    0x41, 0xA2, 0x2D, 0x68, 0x28, 0xBC, 0x42, 0xF8, 0xE0, 0x83, 0xF8, 0xC2,
    0x6E, 0x14, 0x68, 0x3E, 0xEC, 0x91, 0x1D, 0x79, 0x13, 0x15, 0xAD, 0x56,
    0x8A, 0x06, 0xE4, 0x02, 0xA2, 0x2C, 0x49, 0x91, 0x5D, 0x37, 0x48, 0x9E,
    0x42, 0xDA, 0xEE, 0x90, 0xAF, 0xAD, 0xA5, 0x9D, 0x41, 0xAE, 0x7E, 0xC0,
    0xDD, 0xE5, 0xF6, 0x36, 0xF6, 0xA1, 0xE6, 0x6C, 0x23, 0x05, 0xE2, 0x70,
    0x6B, 0x2B, 0xCE, 0x38, 0x32, 0x72, 0x20, 0x39, 0x65, 0x6C, 0x4A, 0x48,
    0xD4, 0xCD, 0xAA, 0x05, 0xC6, 0x7F, 0x8B, 0x46, 0x28, 0x1A, 0x84, 0xBF,
    0xD8, 0x3F, 0x02, 0xB1, 0x73, 0x18, 0x5E, 0x4F, 0xA2, 0x41, 0x9B, 0x90,
    0x0A, 0x31, 0x85, 0x24, 0xCD, 0xFA, 0x5D, 0x21, 0x27, 0xC4, 0xE1, 0x05,
    0xD9, 0xBE, 0xF3, 0xC1, 0x55, 0x1E, 0x82, 0xDB, 0x2A, 0xFB, 0x1C, 0xBE,
    0xF7, 0x60, 0x1F, 0x9E, 0xC7, 0x42, 0x7B, 0x73, 0x73, 0x13, 0x20, 0x5B,
    0x3C, 0x05, 0x3B, 0x1A, 0xA1, 0x48, 0xE5, 0xE0, 0x52, 0xD2, 0x84, 0xB0,
    0x96, 0x46, 0x52, 0x2D, 0x51, 0x6D, 0x85, 0x52, 0x11, 0xEC, 0x44, 0x98,
    0x80, 0x40, 0x6B, 0x18, 0xDE, 0x69, 0x05, 0x29, 0x02, 0x13, 0x91, 0x12,
    0x8F, 0x24, 0x52, 0xB1, 0x4B, 0xB3, 0xB2, 0x2C, 0x4E, 0x86, 0xA8, 0xED,
    0x7C, 0xE9, 0x04, 0x18, 0xD5, 0xAA, 0x27, 0x84, 0x6E, 0xAD, 0x10, 0xF2,
    0xDB, 0x09, 0x10, 0x92, 0x14, 0x42, 0x39, 0x22, 0x23, 0xC6, 0xB6, 0x64,
    0x64, 0x69, 0x56, 0x0A, 0x29, 0xE6, 0x26, 0xA7, 0xA6, 0x86, 0xFC, 0x2C,
    0x42, 0xF2, 0x70, 0x3D, 0x8A, 0xCD, 0x66, 0x29, 0x08, 0x54, 0xE6, 0x8D,
    0xA0, 0x68, 0x86, 0x24, 0x86, 0x4E, 0x87, 0xB2, 0x28, 0xC9, 0x32, 0x8E,
    0x3B, 0x37, 0x48, 0xE2, 0x84, 0x30, 0xBC, 0x21, 0x3D, 0x6B, 0x8F, 0x68,
    0x43, 0xB8, 0xE5, 0xEB, 0xC1, 0x66, 0x09, 0x1C, 0x28, 0xD9, 0xDC, 0xE4,
    0x28, 0xD4, 0x42, 0x3B, 0x59, 0xCA, 0xB0, 0x36, 0xCF, 0x35, 0x35, 0x62,
    0x36, 0xB5, 0x25, 0xE5, 0x6A, 0x6A, 0x40, 0xB4, 0x03, 0x34, 0x94, 0x40,
    0xD2, 0xD0, 0x52, 0x66, 0xFA, 0xB2, 0xC8, 0xF6, 0x4F, 0x71, 0xC9, 0x0D,
    0x52, 0x2A, 0x1D, 0x03, 0xA3, 0x5A, 0x3D, 0x71, 0x87, 0x08, 0xE4, 0x44,
    0xC8, 0x0D, 0x52, 0x62, 0x39, 0x21, 0x94, 0xA3, 0xFD, 0x23, 0xA4, 0x70,
    0x16, 0xBF, 0x31, 0xB4, 0xBE, 0xA0, 0x96, 0x48, 0x91, 0x66, 0x42, 0x6B,
    0x53, 0x72, 0x47, 0x38, 0x90, 0x5A, 0x92, 0x99, 0x02, 0x89, 0x6E, 0xFD,
    0x68, 0xC8, 0xA9, 0x8A, 0x2E, 0x74, 0x0C, 0xC9, 0x88, 0x1B, 0xE4, 0x33,
    0x24, 0x8F, 0x8C, 0x54, 0x7F, 0x24, 0x84, 0xEB, 0x5A, 0xA7, 0x6D, 0x1C,
    0x67, 0x26, 0x05, 0x2D, 0x47, 0x47, 0x94, 0x42, 0x30, 0xD9, 0x78, 0x59,
    0xB5, 0x1D, 0x00, 0xF1, 0xD3, 0x09, 0x1A, 0xDA, 0x6D, 0x74, 0xA0, 0x19,
    0x29, 0xBF, 0x34, 0x1A, 0x32, 0x09, 0x51, 0xDA, 0x11, 0x04, 0xDD, 0x90,
    0x11, 0x81, 0x9F, 0x22, 0x4F, 0x82, 0x24, 0x01, 0x72, 0x4C, 0x18, 0xD5,
    0xEE, 0xC9, 0xF4, 0x5D, 0xEB, 0x96, 0x23, 0x64, 0x8D, 0x51, 0x08, 0x04,
    0x28, 0x47, 0x9C, 0x25, 0x23, 0xCD, 0xE9, 0xDC, 0xC7, 0xD7, 0x14, 0x51,
    0x66, 0x41, 0x20, 0xC9, 0x57, 0x29, 0x49, 0xE6, 0xC2, 0x20, 0x7F, 0x19,
    0xB2, 0x78, 0x0A, 0x3F, 0xA4, 0x67, 0x65, 0x44, 0xE0, 0x2D, 0x85, 0x7C,
    0x6F, 0x62, 0x46, 0x94, 0xE3, 0x12, 0x91, 0x74, 0xBD, 0x20, 0xFC, 0x60,
    0x77, 0x98, 0x7E, 0x4F, 0xF3, 0xDD, 0x2A, 0x99, 0xFC, 0x60, 0xEA, 0xC0,
    0xCD, 0x3F, 0xEB, 0x60, 0x10, 0xEA, 0x56, 0x36, 0x23, 0x27, 0x4E, 0x47,
    0x0E, 0x33, 0x6A, 0x8A, 0x84, 0x0F, 0xD9, 0x80, 0x90, 0xB2, 0x78, 0x5C,
    0x33, 0xF3, 0x3C, 0x85, 0xAD, 0x37, 0x64, 0xC3, 0x0C, 0xE8, 0x4C, 0x86,
    0xF8, 0x0C, 0xDB, 0xAD, 0x57, 0x8C, 0x0A, 0x0B, 0xE3, 0xDE, 0xC4, 0x8C,
    0x28, 0xC7, 0xC7, 0xD5, 0x63, 0x02, 0x39, 0xFE, 0x61, 0xD3, 0xEF, 0xD8,
    0x82, 0x08, 0x90, 0x2E, 0x50, 0x08, 0x86, 0xCB, 0xC4, 0x16, 0x8C, 0x90,
    0xAC, 0x9A, 0x3E, 0x1D, 0x3B, 0xCC, 0xA8, 0xA5, 0x65, 0x73, 0xEC, 0xC8,
    0x15, 0x72, 0xEE, 0xD4, 0x57, 0xC4, 0x38, 0x0E, 0x04, 0x83, 0x0E, 0x06,
    0x4C, 0x41, 0x56, 0x4A, 0x93, 0x52, 0x59, 0x57, 0x31, 0x1B, 0x78, 0x75,
    0xA4, 0xC6, 0xDD, 0x32, 0x42, 0x18, 0xEB, 0x9E, 0x10, 0x6E, 0x41, 0x74,
    0x2A, 0x51, 0x4E, 0x4B, 0xDD, 0x35, 0x78, 0x11, 0xC8, 0xFA, 0xD2, 0x32,
    0x46, 0x83, 0xC6, 0x93, 0xF9, 0x83, 0xDA, 0xF8, 0x27, 0x03, 0x04, 0x2F,
    0xB3, 0xE0, 0x95, 0x35, 0x54, 0x7A, 0x80, 0x76, 0x50, 0x91, 0x48, 0xEB,
    0xC9, 0xBB, 0xF8, 0x9F, 0x15, 0x59, 0xA5, 0xB3, 0x1C, 0x40, 0x88, 0x22,
    0x91, 0x48, 0x64, 0x27, 0x67, 0x64, 0x17, 0x2F, 0xAB, 0xAA, 0x8D, 0xEE,
    0xFA, 0xFA, 0xF1, 0xD4, 0x25, 0x8A, 0x43, 0xD1, 0x88, 0x10, 0x4C, 0x49,
    0xB7, 0x5A, 0x2D, 0xED, 0x0E, 0x67, 0xF8, 0x48, 0x3A, 0x7C, 0x6C, 0x2D,
    0x6D, 0xF5, 0x96, 0x38, 0x83, 0x08, 0xE7, 0x86, 0xF5, 0x1E, 0x86, 0x1A,
    0xAF, 0xEC, 0x25, 0x19, 0xA4, 0x92, 0x60, 0x51, 0x99, 0x9C, 0x11, 0x80,
    0x80, 0x03, 0x2F, 0xDC, 0x8E, 0xA7, 0x2E, 0x1A, 0x1D, 0xCA, 0x78, 0x84,
    0xDC, 0xA7, 0x94, 0x52, 0xFA, 0xB1, 0xE0, 0x15, 0xB5, 0xB9, 0xB8, 0xCA,
    0x22, 0x9B, 0xA0, 0x90, 0x64, 0xF2, 0x95, 0x4C, 0xFA, 0x0F, 0xED, 0x44,
    0x6A, 0xC5, 0xF8, 0x8E, 0xB5, 0x47, 0x57, 0x54, 0xE6, 0x50, 0x54, 0x97,
    0x8C, 0x54, 0x1B, 0x34, 0x21, 0x5E, 0x10, 0xAE, 0x8C, 0x77, 0xD8, 0x58,
    0xF5, 0x4E, 0xAB, 0x2B, 0x5D, 0x1A, 0xD5, 0xDD, 0x83, 0x29, 0x20, 0xF4,
    0x21, 0xAB, 0x09, 0xB5, 0xA2, 0x98, 0x67, 0xB3, 0x33, 0xCF, 0x0D, 0x53,
    0x07, 0xEF, 0x1B, 0xCF, 0xCC, 0x36, 0x23, 0x44, 0x49, 0x28, 0x18, 0xEA,
    0xC3, 0x89, 0xE7, 0x5A, 0xBB, 0x24, 0x1F, 0x0D, 0x6F, 0x08, 0xB7, 0xB1,
    0x72, 0xD8, 0xEA, 0x86, 0xCF, 0xAA, 0x78, 0x81, 0x7A, 0x7F, 0x5A, 0xC8,
    0xA2, 0xDD, 0x5B, 0x2C, 0x48, 0xAF, 0x9F, 0x36, 0xCC, 0x77, 0x13, 0xC6,
    0x62, 0x4E, 0xB0, 0x20, 0x54, 0x91, 0x4E, 0x2B, 0x89, 0x67, 0x93, 0x33,
    0xD2, 0x30, 0xAF, 0x73, 0x1B, 0x53, 0x6F, 0x75, 0x1D, 0x0E, 0x1F, 0x7A,
    0x67, 0xDD, 0x95, 0x95, 0xEE, 0xCA, 0x3A, 0x4C, 0x1A, 0xDD, 0xA9, 0x20,
    0x2A, 0xBD, 0xC7, 0x86, 0x87, 0xAC, 0xD8, 0xA7, 0xE5, 0x43, 0xA5, 0xA2,
    0xD0, 0x87, 0x5F, 0xE1, 0xFA, 0xA7, 0x4E, 0x10, 0xC0, 0x48, 0xA7, 0x27,
    0x42, 0x30, 0x23, 0x84, 0xB1, 0xBC, 0xBE, 0xDC, 0x98, 0xFA, 0xF0, 0xC1,
    0xE1, 0x38, 0x28, 0x8C, 0x10, 0x12, 0xEB, 0x53, 0x41, 0x9E, 0x27, 0x94,
    0x34, 0x79, 0xCC, 0x4A, 0x22, 0x6D, 0x43, 0x92, 0xE7, 0x2A, 0xEB, 0x42,
    0x89, 0x3D, 0xBB, 0x31, 0x3A, 0x10, 0x88, 0xC4, 0x03, 0x02, 0xFD, 0x0A,
    0x18, 0xCB, 0x5E, 0x19, 0xE1, 0x8E, 0x83, 0x1C, 0x0E, 0xE8, 0x7A, 0x0C,
    0x82, 0x49, 0xB9, 0x37, 0x15, 0x84, 0xB6, 0x4C, 0x49, 0xF3, 0x10, 0x58,
    0xE1, 0x55, 0x02, 0x54, 0xBF, 0xE3, 0xDA, 0xA2, 0x33, 0xC6, 0xDC, 0xDC,
    0x9C, 0x32, 0x19, 0x72, 0xAF, 0xD1, 0x20, 0x8C, 0xE5, 0x95, 0xC6, 0xD4,
    0x07, 0x74, 0x0E, 0x47, 0xA6, 0xE1, 0x33, 0xF6, 0x6B, 0x06, 0x60, 0x79,
    0x38, 0x0D, 0x84, 0x3D, 0x62, 0xA4, 0xF0, 0x17, 0x31, 0xB5, 0x97, 0x2A,
    0xBC, 0xA7, 0xBE, 0xE4, 0xDB, 0xAB, 0x53, 0x04, 0x46, 0xDA, 0x0D, 0x82,
    0x6B, 0x17, 0x2C, 0x61, 0x4B, 0x8D, 0xA9, 0x8F, 0x4C, 0x1D, 0x0E, 0xB1,
    0x7B, 0x67, 0xEB, 0x1B, 0x1B, 0x2B, 0x1B, 0xA4, 0x6F, 0x4D, 0x07, 0x99,
    0xA3, 0x4F, 0x39, 0xAD, 0xCC, 0x8D, 0xDC, 0x28, 0x75, 0x20, 0x57, 0x89,
    0xE7, 0x7D, 0xFE, 0x2D, 0x7D, 0xCE, 0x74, 0xB8, 0x41, 0x1E, 0x36, 0x30,
    0x1D, 0xCB, 0x4B, 0x2B, 0x1E, 0x10, 0xFE, 0x10, 0xDB, 0xE1, 0x5A, 0xA1,
    0x77, 0x86, 0xBF, 0xF2, 0x41, 0x25, 0xD3, 0x40, 0x5E, 0xDA, 0x6D, 0x1B,
    0x85, 0x08, 0xC3, 0xB4, 0x3A, 0x37, 0xFA, 0x01, 0x0C, 0xB2, 0x38, 0xB7,
    0xB8, 0xE8, 0x06, 0xC1, 0x84, 0x40, 0x3E, 0x96, 0x3C, 0x20, 0xFC, 0xB5,
    0x82, 0xC3, 0x45, 0x0F, 0x85, 0x60, 0xAC, 0xAC, 0x34, 0x7E, 0x18, 0x64,
    0x71, 0x14, 0x92, 0x3C, 0x4B, 0x8F, 0x35, 0x44, 0x5F, 0x04, 0x05, 0x0D,
    0x0F, 0x08, 0x3A, 0x56, 0x96, 0x96, 0x5D, 0x21, 0xFC, 0x45, 0x8F, 0xC3,
    0xD5, 0x5B, 0xF8, 0xDC, 0x84, 0x6C, 0x2C, 0x4F, 0x01, 0x99, 0x79, 0x96,
    0xC6, 0x76, 0xC1, 0x53, 0x86, 0x36, 0x76, 0xC6, 0xFE, 0xEF, 0x7C, 0xAC,
    0x1D, 0xFA, 0x73, 0xD3, 0xB1, 0x38, 0xF7, 0xCA, 0x1D, 0xF2, 0x7D, 0x75,
    0xE7, 0xD7, 0x93, 0x46, 0x1A, 0x85, 0xF1, 0xDD, 0x4D, 0x77, 0xB3, 0xBB,
    0xA9, 0x4A, 0x50, 0xA0, 0x52, 0x68, 0x11, 0x84, 0x15, 0x41, 0x14, 0x50,
    0xFE, 0x83, 0x52, 0x8A, 0x46, 0xE8, 0xDC, 0xCD, 0x1D, 0x59, 0x2F, 0x7A,
    0xDB, 0xAB, 0x92, 0x05, 0xF5, 0xDA, 0xA6, 0x89, 0x04, 0x5A, 0x09, 0x26,
    0x10, 0x0D, 0x69, 0x20, 0x76, 0x41, 0x8D, 0xAD, 0x50, 0x6D, 0x4C, 0xF8,
    0x72, 0x7B, 0xDE, 0x19, 0xA4, 0x02, 0xC3, 0xCC, 0x3B, 0x30, 0xC0, 0xEC,
    0x89, 0x89, 0x1A, 0xCD, 0x30, 0x3F, 0x9F, 0x73, 0x5E, 0x49, 0xE6, 0x9C,
    0xF3, 0xA0, 0xC8, 0xFE, 0x93, 0x63, 0x7B, 0xE9, 0x87, 0x8F, 0xDE, 0x98,
    0x1E, 0x86, 0x7E, 0xDC, 0x3F, 0x38, 0x6C, 0x4A, 0x82, 0x01, 0x12, 0x6B,
    0xFC, 0x9D, 0x4C, 0xC6, 0xE3, 0x49, 0x74, 0x6F, 0xC5, 0x77, 0x9D, 0x3F,
    0x8C, 0x76, 0x82, 0x50, 0x10, 0xC5, 0x78, 0x31, 0xF9, 0xE6, 0x3A, 0xD6,
    0x1B, 0x84, 0xC2, 0x48, 0x1C, 0x24, 0x6E, 0x4F, 0xF1, 0x0E, 0xAD, 0x9F,
    0x99, 0x1E, 0x4F, 0x93, 0xBB, 0xFB, 0x87, 0x10, 0x14, 0x09, 0x06, 0x48,
    0x34, 0xF7, 0x26, 0x09, 0x11, 0x87, 0x8F, 0x6E, 0x90, 0x68, 0x37, 0x48,
    0x11, 0x51, 0x20, 0xF4, 0x8B, 0x9E, 0x17, 0x4C, 0x35, 0x39, 0xB2, 0x89,
    0xDB, 0x13, 0xD6, 0x37, 0xF1, 0x0F, 0x1E, 0x4F, 0x33, 0x35, 0x0C, 0x64,
    0xB2, 0x07, 0x87, 0x4D, 0x14, 0x1C, 0x90, 0x93, 0x62, 0x3C, 0x99, 0x4A,
    0x52, 0x30, 0x58, 0x20, 0xE8, 0x37, 0x8B, 0xC9, 0x78, 0xB5, 0xE7, 0x3D,
    0xE6, 0xF2, 0x28, 0xAB, 0x12, 0xD9, 0x6C, 0x76, 0xFF, 0x1A, 0xB3, 0xD6,
    0x9F, 0x31, 0xB6, 0x70, 0x90, 0x39, 0x4A, 0x12, 0x88, 0xEC, 0x3E, 0x06,
    0x48, 0xAC, 0xF1, 0x26, 0x05, 0x81, 0x09, 0x02, 0x1C, 0xD5, 0x24, 0x80,
    0xC7, 0x7B, 0xDF, 0x23, 0x05, 0x82, 0x38, 0x38, 0x32, 0xAB, 0xF4, 0xB0,
    0x85, 0x83, 0xB1, 0xA9, 0xE6, 0x6D, 0x53, 0x92, 0xC3, 0x03, 0x1C, 0x90,
    0xE8, 0x49, 0x35, 0x9E, 0xA2, 0x22, 0x5E, 0xC5, 0x02, 0x49, 0xA6, 0xF2,
    0x29, 0x16, 0x41, 0x10, 0x48, 0x16, 0xC5, 0x01, 0xBB, 0x20, 0xD1, 0xB6,
    0xA6, 0x1A, 0xC6, 0x36, 0x27, 0x72, 0xB7, 0x71, 0xF8, 0x15, 0x1F, 0x24,
    0x96, 0x2B, 0xC2, 0xAD, 0x21, 0x51, 0xB8, 0x41, 0xAA, 0x88, 0x22, 0x9F,
    0x4F, 0x16, 0x2F, 0x58, 0x8A, 0xEE, 0x96, 0xE2, 0xE0, 0xA8, 0x90, 0x68,
    0xBA, 0xAD, 0xCD, 0x89, 0xA9, 0xF1, 0x0C, 0x48, 0x2E, 0x12, 0x87, 0x5F,
    0xBF, 0x02, 0xCC, 0xFE, 0x87, 0x28, 0x0E, 0xC9, 0x35, 0x90, 0xE4, 0x31,
    0x41, 0xF2, 0x79, 0xC4, 0xF1, 0x3D, 0xC6, 0x05, 0x72, 0x98, 0xB8, 0xDD,
    0x65, 0xBD, 0x56, 0xA5, 0xAD, 0xF1, 0x8C, 0xA9, 0x15, 0x10, 0x35, 0x3D,
    0x5C, 0x34, 0x0E, 0x10, 0x4A, 0x02, 0x0F, 0x24, 0xF6, 0x9D, 0xBA, 0xC1,
    0x14, 0x06, 0x08, 0x22, 0x2E, 0x56, 0x73, 0x6C, 0x39, 0x43, 0x83, 0xEC,
    0x37, 0xD8, 0x39, 0xA2, 0xB5, 0xB6, 0x56, 0x40, 0xA6, 0xE6, 0x4C, 0xBA,
    0x13, 0xE5, 0x3A, 0x01, 0x85, 0x82, 0x07, 0x02, 0x28, 0x17, 0xF9, 0x62,
    0x32, 0x95, 0xC2, 0x4A, 0xAD, 0x64, 0xF5, 0xF6, 0x94, 0x35, 0xF7, 0x01,
    0x24, 0x91, 0xB8, 0xBD, 0x3E, 0xE1, 0xB8, 0x56, 0xBD, 0xAD, 0x39, 0x93,
    0xA1, 0x5D, 0xB6, 0x99, 0x5D, 0x3B, 0xA7, 0xD7, 0xD9, 0x44, 0xFE, 0x22,
    0x8A, 0x49, 0xF2, 0x36, 0xD7, 0xA8, 0x16, 0xAB, 0x1C, 0x7F, 0xC4, 0xE8,
    0x87, 0x6A, 0xB5, 0xDA, 0xF8, 0xF8, 0x96, 0xFD, 0x52, 0xDF, 0xF3, 0xB7,
    0x8D, 0xEB, 0x0F, 0x3B, 0x1C, 0x97, 0x2A, 0xB4, 0xB7, 0xCB, 0x32, 0x34,
    0x30, 0xB7, 0x1E, 0x1C, 0xEE, 0xBC, 0xDE, 0xFD, 0xF8, 0x2E, 0x8A, 0x1B,
    0xB1, 0x9D, 0x93, 0xD3, 0x1C, 0xD7, 0x5F, 0xF1, 0x24, 0x77, 0x7A, 0xC2,
    0x75, 0x87, 0xD1, 0xD3, 0x8B, 0xDD, 0xD7, 0x31, 0xCE, 0xD7, 0xBB, 0x6C,
    0x6F, 0x60, 0x66, 0x68, 0x29, 0x7F, 0xF8, 0x08, 0x34, 0x16, 0xE5, 0x15,
    0x31, 0x01, 0x7E, 0x03, 0xF7, 0x45, 0xCF, 0xDB, 0x5B, 0xCA, 0xD9, 0x9A,
    0xFC, 0xC9, 0xA8, 0x88, 0xA3, 0xD0, 0xD1, 0xE4, 0xDF, 0x3E, 0x76, 0x51,
    0x7B, 0xF5, 0xBF, 0x21, 0x29, 0x75, 0x8C, 0x5D, 0xB0, 0x0F, 0xC2, 0x88,
    0x97, 0x24, 0x73, 0xDC, 0x31, 0x08, 0xC3, 0x31, 0x9A, 0x24, 0x5A, 0x92,
    0x72, 0xD7, 0x68, 0x12, 0xC7, 0xB0, 0x98, 0x58, 0x49, 0x6E, 0xBA, 0x86,
    0xC5, 0xB8, 0xC6, 0xF7, 0xC4, 0x49, 0x72, 0xD7, 0x35, 0xBE, 0xC7, 0x3D,
    0x50, 0x29, 0x4A, 0x92, 0x5A, 0xD7, 0x40, 0x25, 0xC6, 0x88, 0xAB, 0x08,
    0x49, 0xD2, 0xDD, 0x23, 0xAE, 0x38, 0x43, 0xC7, 0xE2, 0x23, 0xB9, 0x64,
    0x18, 0x3A, 0xC6, 0x19, 0x03, 0x27, 0xC5, 0x77, 0xF6, 0x76, 0x8F, 0x81,
    0x77, 0x0D, 0xE6, 0x5F, 0xBE, 0x12, 0x3D, 0xC9, 0x15, 0xD3, 0x60, 0x3E,
    0xDE, 0xAA, 0x04, 0x52, 0x6C, 0x82, 0x30, 0xAC, 0x4A, 0xC0, 0x5B, 0x5E,
    0x41, 0x8A, 0xAA, 0x42, 0x18, 0x97, 0x57, 0x60, 0xAE, 0x13, 0x21, 0x45,
    0x74, 0x64, 0xF5, 0x58, 0x27, 0x82, 0xB9, 0xE0, 0x45, 0x34, 0x24, 0xB5,
    0x5E, 0x0B, 0x5E, 0x70, 0x57, 0xEE, 0x88, 0x84, 0xA4, 0xD0, 0x73, 0xE5,
    0x0E, 0xF6, 0x12, 0x24, 0x71, 0x90, 0xDC, 0xF4, 0x5E, 0x82, 0x84, 0xBD,
    0x96, 0x4A, 0x0C, 0x24, 0x65, 0x96, 0xB5, 0x54, 0xF8, 0x8B, 0xC2, 0xC6,
    0x4F, 0x92, 0xAE, 0xB3, 0x2D, 0x0A, 0xC3, 0x5F, 0xDD, 0x46, 0x8E, 0xBF,
    0xD2, 0xD9, 0x56, 0xB7, 0xF1, 0x58, 0xA6, 0x37, 0x66, 0x92, 0x2F, 0x1C,
    0xCB, 0xF4, 0x78, 0xAC, 0x37, 0x1C, 0x2B, 0x49, 0xE6, 0x9C, 0x63, 0xBD,
    0x21, 0x9F, 0x85, 0x93, 0xE3, 0x24, 0x39, 0xE3, 0x5C, 0x38, 0xC9, 0x67,
    0x05, 0x28, 0x39, 0xC6, 0x13, 0x8B, 0x73, 0x05, 0x28, 0xAF, 0xA5, 0xAC,
    0xE3, 0x22, 0xB9, 0xC3, 0x59, 0xCA, 0xCA, 0x6B, 0x4D, 0xEE, 0x78, 0x48,
    0x32, 0x47, 0x38, 0x6B, 0x72, 0xF9, 0x2D, 0x2E, 0x26, 0xC7, 0x54, 0x20,
    0x38, 0x8B, 0x8B, 0xF9, 0xAD, 0x92, 0x1E, 0x03, 0xC9, 0x15, 0xE6, 0x2A,
    0xE9, 0x8E, 0xE5, 0xDE, 0x2A, 0x8E, 0xE5, 0xDE, 0x23, 0x27, 0xA9, 0x50,
    0x05, 0x82, 0xB3, 0xDC, 0x9B, 0xE7, 0xBA, 0x75, 0x72, 0xD4, 0x85, 0x8E,
    0xBF, 0x6E, 0x9D, 0xE7, 0x02, 0xFC, 0x91, 0x92, 0xEC, 0x9D, 0xF3, 0x58,
    0x80, 0xCF, 0xD7, 0x92, 0x60, 0x84, 0x24, 0xE9, 0x23, 0x64, 0x49, 0xA0,
    0xC7, 0xB5, 0x24, 0xE0, 0x6B, 0x12, 0x41, 0x8E, 0xEE, 0xE0, 0xE5, 0x69,
    0x12, 0xC1, 0xD7, 0xB6, 0x63, 0x44, 0x24, 0x99, 0x1B, 0xBE, 0xB6, 0x1D,
    0xBC, 0x8D, 0x54, 0xC8, 0x51, 0x72, 0xF0, 0x31, 0x52, 0xE1, 0x6D, 0x6D,
    0x43, 0x8E, 0x8C, 0x83, 0xA7, 0xB5, 0x0D, 0xB3, 0xD9, 0xD0, 0x38, 0x49,
    0x68, 0x3B, 0x18, 0xC1, 0x6C, 0x93, 0xC6, 0x76, 0x0A, 0xDF, 0xF5, 0xCB,
    0xC1, 0xDF, 0x90, 0x6B, 0xA8, 0x24, 0x85, 0x7A, 0xDF, 0x86, 0x5C, 0xFC,
    0x2D, 0xD2, 0x86, 0x48, 0x52, 0x19, 0xC4, 0x22, 0x8D, 0xBF, 0x69, 0xDD,
    0xD0, 0x48, 0xAE, 0x06, 0x33, 0xAD, 0xE3, 0x6F, 0x23, 0x38, 0x1C, 0x92,
    0xCC, 0x19, 0x6D, 0x23, 0x68, 0xEF, 0xD7, 0x46, 0xB0, 0x0F, 0x63, 0x47,
    0x72, 0x38, 0x65, 0x3E, 0xA8, 0xB1, 0x63, 0x1F, 0x56, 0x9B, 0xC2, 0x93,
    0x94, 0x85, 0xB0, 0xDA, 0xEC, 0xC3, 0xFC, 0x94, 0x14, 0x3E, 0xAD, 0x84,
    0x30, 0x3F, 0xED, 0xC3, 0x8E, 0x56, 0x50, 0x92, 0x2F, 0xE7, 0x42, 0xD9,
    0xD1, 0xF6, 0x61, 0x10, 0x2C, 0x1C, 0x49, 0xBA, 0x26, 0xA0, 0x41, 0x70,
    0x1F, 0x96, 0xCD, 0x42, 0x91, 0x94, 0xEB, 0x82, 0x5A, 0x36, 0xF7, 0x61,
    0xA2, 0x2D, 0x08, 0x49, 0xE1, 0x46, 0x68, 0x13, 0xED, 0x16, 0x09, 0xBE,
    0xAD, 0x39, 0x29, 0x44, 0x56, 0x09, 0x6F, 0x6B, 0xDE, 0x87, 0xD1, 0xFC,
    0x80, 0x24, 0x99, 0xCB, 0xE1, 0x18, 0xCD, 0xDF, 0xBF, 0x83, 0x7C, 0xD4,
    0x4C, 0xAF, 0x69, 0x5A, 0x94, 0x79, 0x7F, 0xD0, 0xB0, 0x65, 0x9D, 0x23,
    0x2E, 0xF7, 0x84, 0x25, 0xC9, 0x5C, 0x11, 0x73, 0xD6, 0x2D, 0x43, 0xD0,
    0x3F, 0x4F, 0xCB, 0x31, 0xDD, 0x4C, 0xAB, 0x47, 0x3C, 0xDE, 0x27, 0xB2,
    0x1F, 0x5E, 0xCD, 0xF4, 0x52, 0xCA, 0x69, 0x51, 0x2C, 0x26, 0xC8, 0xAF,
    0xB0, 0xD6, 0x1A, 0x39, 0x66, 0x50, 0xA5, 0x6F, 0x92, 0xF4, 0xE5, 0x71,
    0xC4, 0xAA, 0x0D, 0x43, 0x56, 0x99, 0x2C, 0xB4, 0x1C, 0x72, 0xE5, 0x7D,
    0x5A, 0xFD, 0x3E, 0xA0, 0x1C, 0x6D, 0xE9, 0xD5, 0x12, 0x25, 0x60, 0x9C,
    0xB2, 0x9B, 0xCC, 0x4E, 0x84, 0x32, 0x47, 0x9C, 0x09, 0xD4, 0xDF, 0x75,
    0x57, 0x02, 0x35, 0x00, 0xC3, 0x69, 0x36, 0xD9, 0xA7, 0x8C, 0x81, 0x4E,
    0x39, 0x04, 0xE0, 0xB8, 0x27, 0x01, 0x51, 0x9E, 0xD1, 0xA2, 0xE8, 0x26,
    0x20, 0xBF, 0x54, 0x7A, 0x07, 0xA0, 0x6C, 0x2D, 0x79, 0x88, 0xA3, 0xAB,
    0x81, 0xFB, 0x20, 0x33, 0xE5, 0x1B, 0xC2, 0xB3, 0xB4, 0x05, 0x18, 0x0E,
    0xBD, 0x0A, 0xB2, 0x6A, 0x42, 0x47, 0xCB, 0xF1, 0x0C, 0xE4, 0x10, 0x8E,
    0xE3, 0x61, 0xCD, 0x23, 0x51, 0x16, 0x6D, 0x6B, 0x9A, 0x09, 0x19, 0x85,
    0xE2, 0x0E, 0x1A, 0x7C, 0xCB, 0x1B, 0x11, 0xA2, 0x56, 0xF9, 0x34, 0x00,
    0x49, 0xA1, 0x74, 0x1C, 0xD9, 0x58, 0xF6, 0x19, 0x82, 0x6E, 0x0A, 0x43,
    0x36, 0xA1, 0x59, 0x83, 0xC3, 0x0A, 0xE4, 0xF8, 0x4B, 0x48, 0x39, 0x3A,
    0x44, 0x81, 0xE3, 0xEB, 0xE9, 0x2C, 0xE4, 0x17, 0x94, 0x0A, 0xA0, 0x98,
    0xCC, 0x7E, 0x97, 0xC2, 0xAB, 0xB5, 0x7A, 0x88, 0x7A, 0xED, 0xCB, 0xA7,
    0xBE, 0x48, 0x0A, 0xA5, 0x73, 0xC2, 0x63, 0xD5, 0x7A, 0x15, 0x2E, 0xBF,
    0xD9, 0x84, 0x30, 0xD6, 0x35, 0x90, 0x55, 0xB3, 0x4F, 0x5F, 0x50, 0xD5,
    0x21, 0x34, 0x07, 0x75, 0x7A, 0xB5, 0x2A, 0xE5, 0x4F, 0x65, 0x0B, 0xC5,
    0x6E, 0x9A, 0xDF, 0x76, 0xAA, 0x41, 0x16, 0xA8, 0x96, 0xE3, 0xB3, 0x6F,
    0x7B, 0xFC, 0x48, 0xD2, 0xE5, 0x5A, 0x1D, 0x2A, 0x03, 0xC4, 0x50, 0x3B,
    0xB7, 0xE7, 0x4D, 0xF6, 0x16, 0x86, 0xF2, 0xCF, 0x1F, 0xD5, 0xF1, 0xEB,
    0x4F, 0x02, 0x07, 0x25, 0x0A, 0x75, 0x7C, 0x21, 0x14, 0x39, 0x42, 0x81,
    0x5A, 0x99, 0xB2, 0xAC, 0xEA, 0x41, 0x16, 0x75, 0x18, 0x58, 0x3C, 0x11,
    0xE2, 0xA8, 0xF6, 0xED, 0x5F, 0x3C, 0x92, 0x74, 0xA5, 0x74, 0x44, 0x44,
    0x3C, 0x40, 0x11, 0x56, 0x83, 0x18, 0xFA, 0x55, 0xCB, 0xD4, 0x63, 0x09,
    0x85, 0x21, 0x47, 0x18, 0xD4, 0x61, 0x25, 0xBC, 0x1C, 0x5D, 0xF9, 0x05,
    0xA5, 0xD2, 0x44, 0x31, 0x6E, 0x22, 0x59, 0x1C, 0x6E, 0x97, 0xDA, 0xE0,
    0xD5, 0x2E, 0x6D, 0xCC, 0x11, 0x44, 0xFD, 0x73, 0xA9, 0x5C, 0xF8, 0xD4,
    0x9B, 0xE4, 0xFD, 0x5D, 0xE5, 0xF2, 0xF3, 0x39, 0x41, 0xCC, 0x6D, 0x2C,
    0x69, 0xBD, 0x06, 0xB5, 0xCB, 0xED, 0x40, 0x62, 0x6C, 0x1A, 0x25, 0x13,
    0x14, 0x06, 0x14, 0xC7, 0xB0, 0xB2, 0xAA, 0x8D, 0x84, 0xCA, 0x2F, 0x84,
    0x82, 0x12, 0xCC, 0xB6, 0xA6, 0x93, 0x06, 0x64, 0x20, 0x8B, 0x0A, 0x58,
    0xFC, 0xAE, 0xA0, 0x22, 0xEC, 0xD3, 0x2E, 0x59, 0x11, 0x0D, 0x51, 0xBF,
    0x29, 0x5D, 0x95, 0x2B, 0x85, 0xBB, 0xBD, 0x4C, 0xE6, 0x3D, 0xDC, 0x7C,
    0x26, 0xB3, 0x77, 0x57, 0xA8, 0x94, 0xAF, 0x4A, 0x08, 0x01, 0x18, 0xAC,
    0x4B, 0x5A, 0x5F, 0x58, 0x01, 0x5A, 0x00, 0x85, 0x0A, 0xC4, 0x90, 0x05,
    0xA4, 0xBA, 0x35, 0x1B, 0x95, 0x54, 0x08, 0xE3, 0x11, 0xF5, 0xBF, 0x63,
    0x58, 0x1C, 0x0C, 0x28, 0x8B, 0xB6, 0x15, 0x24, 0x0B, 0xCD, 0xA2, 0x37,
    0xBF, 0x74, 0x03, 0x8C, 0xC1, 0xEB, 0xD3, 0x2E, 0x03, 0x8E, 0x67, 0x2E,
    0x42, 0x74, 0x44, 0x64, 0xCE, 0x03, 0x08, 0xCB, 0x5A, 0x9F, 0xD7, 0xA0,
    0x08, 0xBA, 0xDC, 0x2F, 0xCD, 0x7A, 0x9A, 0x02, 0x89, 0xB1, 0x62, 0x5B,
    0x1C, 0x19, 0x46, 0x07, 0x0A, 0xAA, 0x95, 0xC9, 0xC5, 0x85, 0x69, 0x90,
    0x85, 0x62, 0x99, 0xB1, 0xAF, 0x22, 0x18, 0xBF, 0xD3, 0x15, 0x54, 0x2B,
    0x0C, 0x61, 0xAF, 0x6F, 0x6B, 0x4B, 0xBB, 0xBC, 0xBC, 0xBC, 0x44, 0x05,
    0x7C, 0xA1, 0xD5, 0x6E, 0xF9, 0xBC, 0x61, 0x83, 0x42, 0x1D, 0x74, 0x39,
    0xFD, 0x08, 0x62, 0xD5, 0x3E, 0x43, 0x51, 0x80, 0x18, 0xD3, 0x0B, 0x8B,
    0x93, 0xCD, 0xDA, 0x18, 0x09, 0x46, 0x27, 0x0A, 0x1C, 0xC6, 0x20, 0xCB,
    0x42, 0x08, 0xB1, 0x04, 0x64, 0xC6, 0xCD, 0xA9, 0x19, 0x8B, 0x6A, 0x55,
    0x3F, 0x6F, 0x76, 0x6C, 0xFB, 0xDD, 0x4E, 0x17, 0x00, 0xA9, 0xD5, 0x8A,
    0x66, 0xC0, 0x97, 0x41, 0x97, 0xCB, 0xE9, 0xF6, 0x6F, 0x3B, 0xCC, 0xF3,
    0xFA, 0x55, 0x95, 0x65, 0x66, 0x6A, 0xD3, 0x28, 0x0B, 0x20, 0x8A, 0xD0,
    0x02, 0x88, 0x01, 0x07, 0xEE, 0x48, 0x31, 0x1E, 0xA0, 0xFC, 0xF6, 0x0B,
    0x1C, 0xC6, 0x90, 0x61, 0xA8, 0xF0, 0x41, 0x97, 0xE7, 0x1A, 0xE9, 0xBA,
    0x44, 0x66, 0x7C, 0x3C, 0x45, 0xD1, 0x80, 0x38, 0x00, 0x64, 0x36, 0x3B,
    0x1C, 0x2F, 0xA9, 0x70, 0x38, 0x1C, 0x66, 0x00, 0x00, 0x19, 0x10, 0x03,
    0x28, 0x61, 0x94, 0x49, 0xD6, 0xA5, 0x9A, 0xE7, 0xA0, 0x05, 0x2A, 0x70,
    0xC8, 0x29, 0x38, 0x70, 0xA9, 0x12, 0x1F, 0x19, 0x46, 0x13, 0x85, 0x3A,
    0x8C, 0x69, 0x59, 0x10, 0x0B, 0xE8, 0x02, 0xF5, 0xA2, 0xD3, 0x80, 0x32,
    0x88, 0x66, 0x13, 0x70, 0x66, 0x2C, 0x16, 0xBB, 0x5D, 0x05, 0x01, 0xF7,
    0x0E, 0x61, 0xB7, 0x5B, 0x10, 0xC1, 0xD4, 0x26, 0x62, 0x00, 0x25, 0x34,
    0x3A, 0xA8, 0x0B, 0xD0, 0x82, 0xA6, 0xA0, 0xC5, 0xA0, 0xFE, 0x71, 0x8C,
    0x0E, 0xA3, 0x85, 0x82, 0x64, 0x69, 0xB1, 0x28, 0x67, 0x41, 0x18, 0x5B,
    0x68, 0x8D, 0xA2, 0x59, 0x0F, 0x48, 0x24, 0x32, 0x99, 0xD1, 0x68, 0x7C,
    0xDC, 0x0A, 0xF8, 0x46, 0x26, 0x93, 0x48, 0x02, 0xEB, 0x14, 0xC3, 0x5A,
    0xC8, 0x06, 0x52, 0x40, 0x46, 0xB5, 0x28, 0x68, 0x31, 0x46, 0x8C, 0xD1,
    0x26, 0xCB, 0x3D, 0xCB, 0x0B, 0x24, 0x8C, 0x7C, 0x11, 0xD1, 0xAC, 0x00,
    0x8E, 0x4E, 0xA3, 0x91, 0x4A, 0x27, 0x1E, 0x84, 0x54, 0xAA, 0xD1, 0xE8,
    0x00, 0x61, 0x05, 0x31, 0x2C, 0xCA, 0x91, 0x14, 0x2F, 0x68, 0x0A, 0x94,
    0x52, 0x7F, 0x8C, 0x89, 0x82, 0x46, 0xA1, 0xAB, 0x85, 0x66, 0x79, 0xD2,
    0x84, 0x51, 0x22, 0x1A, 0x84, 0x63, 0x9B, 0x0E, 0x85, 0x56, 0x20, 0xD6,
    0x20, 0xD0, 0xE7, 0x50, 0x68, 0xDA, 0x86, 0x10, 0x10, 0x83, 0xB2, 0x09,
    0xF1, 0x84, 0xD6, 0x62, 0x6C, 0x62, 0xB4, 0xCB, 0x72, 0x9F, 0x63, 0x34,
    0x0C, 0xA2, 0x01, 0x1C, 0xE5, 0xE4, 0xE4, 0xEC, 0xAC, 0x1C, 0x90, 0xEE,
    0x43, 0x2E, 0x9F, 0x9D, 0x9D, 0x9C, 0x54, 0x02, 0x02, 0x62, 0xA0, 0x21,
    0x7E, 0x64, 0xD4, 0xC0, 0x14, 0xFF, 0x01, 0x1F, 0x68, 0x6B, 0x4A, 0x6F,
    0xBA, 0xB2, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45, 0x4E, 0x44, 0xAE,
    0x42, 0x60, 0x82
};

            Image = new Texture2D(1, 1);
            Image.LoadImage(rawData);
        }
        GUI.DrawTexture(new Rect(0f, 0f, 100f, 100f), Image);

        if (Event.current.type == EventType.MouseDrag)
        {
            // Menu will not appear if dragging menu more than 0.3 sec.
            // This is to solve tapping sensitive issue.
            delay += Time.deltaTime;
            if (delay > 0.3f)
            {
                ifDragged = true;
            }
        }
        else if (Event.current.type == EventType.MouseUp)
        {
            delay = 0;
            if (!ifDragged)
                isOpen = !isOpen;
            ifDragged = false;
        }

        //Create draggable window
        GUI.DragWindow();
    }
	
	#region Instance
    public static void StartMenu()
    {
        instance = (DragonNestKR)FindObjectOfType(typeof(DragonNestKR));
        if (instance != null)
        {
            return;
        }
        GameObject gameObject = new GameObject();
        DontDestroyOnLoad(gameObject);
        instance = gameObject.AddComponent<DragonNestKR>();
    }

    private void OnEnable()
    {
        if (instance == null || !instance.enabled)
        {
            instance = this;
            return;
        }
        base.enabled = false;
    }

    private void OnDisable()
    {
        if (this == instance)
        {
            instance = null;
        }
    }

    public static DragonNestKR Instance
    {
        get
        {
            return instance;
        }
    }

    public static DragonNestKR call()
    {
        if (bl == null)
        {
            return bl = new DragonNestKR();
        }
        return bl;
    }
    #endregion
}
